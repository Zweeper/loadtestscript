<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">35</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">/Users/tanawootchawapon/Desktop/apache-jmeter-5.4.1/bin/KTAXA_loadtest_user7.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get_token" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;:&quot;${RSA}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host_name}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/site/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="add_user_info" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;: &quot;loadtest&quot;,&#xd;
    &quot;MDM_ID&quot;: &quot;${MDMID}&quot;,&#xd;
    &quot;POLICY&quot;: [&#xd;
        &quot;${Policy Number}&quot;&#xd;
    ],&#xd;
    &quot;LANG&quot;: &quot;TH&quot;,&#xd;
    &quot;OS&quot;: &quot;Android&quot;,&#xd;
    &quot;locations&quot;: [&#xd;
        {&#xd;
            &quot;location&quot;: &quot;https://s3.amazonaws.com/upload.convolab.ai/react-native-webchat/convoChatWeb.html&quot;,&#xd;
            &quot;timestamp&quot;: 1625654214823&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host_name}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/site/chat/info?token=${token}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">500.0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.OpenWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.OpenWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.OpenWebSocketSampler" testname="WebSocket Open Connection" enabled="true">
          <boolProp name="TLS">true</boolProp>
          <stringProp name="server">${host_name}</stringProp>
          <stringProp name="port">443</stringProp>
          <stringProp name="path">/ws/?type=${type}&amp;id=${uid}&amp;uuid=${__time(,)}&amp;EIO=3&amp;transport=websocket</stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="readTimeout">6000</stringProp>
        </eu.luminis.jmeter.wssampler.OpenWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="Engine_IO_ping/pong" enabled="true">
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">2probe</stringProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="Create_connection" enabled="true">
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">40/ws</stringProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="WebSocket Single Read Sampler" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="WebSocket Single Read Sampler" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="WebSocket Single Read Sampler" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree/>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="FLOW2_about_claim" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F2_1_select_rich_menu_about_claim" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F2_1_select_rich_menu_about_claim-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NA_@claim_menu&amp;contextName=richmenu&amp;contextValue=การเคลม|การเคลม\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert2_1&quot;, &quot;&quot;)
</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF2_1} &lt; 3),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F2_1_select_rich_menu_about_claim-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF2_1&quot;)
String expected = &quot;กรุณาเลือกที่เมนูด้านล่าง เพื่อดูรายละเอียดการเคลม ที่คุณต้องการได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
//vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert2_1&quot;, &quot;false&quot;)

}</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF2_1</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert2_1&quot;)
//String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F2_2_select_tips_selection" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F2_2_select_tips_selection-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_c7ba744e.de19a8|btn_claim|Tips|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert2_2&quot;, &quot;&quot;)</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF2_2} &lt; 3),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F2_2_select_tips_selection-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF2_2&quot;)
String expected = &quot;Tips มีทั้งหมด 4 หัวข้อ คุณสามารถเลือกที่เมนูด้านล่าง เพื่อดูรายละเอียดเพิ่มเติมได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert2_2&quot;, &quot;false&quot;)

}</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF2_2</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert2_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F2_3_select_pre_existing_condition" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F2_3_select_pre_existing_condition-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_33319349.811c3c|btn_claim|สภาพที่เป็นมาก่อนการเอาประกันภัย ประกันสุขภาพ|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert2_3&quot;, &quot;&quot;)
vars.putObject(&quot;assert2_3_1&quot;, &quot;&quot;)
vars.putObject(&quot;assert2_3_2&quot;, &quot;&quot;)</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${F2_3} &lt; 5),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F2_3_select_pre_existing_condition-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;F2_3&quot;)
String expected = &quot;บริษัทฯ จะไม่จ่ายผลประโยชน์ตามสัญญาเพิ่มเติมนี้ สำหรับโรคเรื้อรัง การเจ็บป่วย&quot;
String expected1 = &quot;หากคุณต้องการทำรายการอื่น ๆ หรือจบบทสนทนา สามารถเลือกกดที่เมนูด้านล่างนี้ได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert2_3_1&quot;)
String varify2 = vars.getObject(&quot;assert2_3_2&quot;)
vars.putObject(&quot;responseCheck&quot;, response1)
//int counter = (vars.getObject(&quot;counterF2_3&quot;)).toInteger();

//log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );

//log.info(&quot;check varify 1 status: &quot; + varify1);
//log.info(&quot;check varify 2 status: &quot; + varify2);

if (response1.contains(expected)){
		vars.putObject(&quot;assert2_3_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert2_3_1&quot;)
		
} else if (response1.contains(expected1)) {
		vars.putObject(&quot;assert2_3_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert2_3_2&quot;)
	
}

if (varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_3&quot;, &quot;true&quot;)
//	log.info(&quot;This case is pass !!!!!&quot;);
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
		
} else if (count.equals(&quot;5&quot;) &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert2_3&quot;, &quot;false&quot;)

}
</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">F2_3</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert2_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="FLOW3_contact_us" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F3_1_select_rich_menu_contact_us" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F3_1_select_rich_menu_contact_us-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NA_@contact_us&amp;contextName=richmenu4&amp;contextValue=ติดต่อเรา|ติดต่อเรา\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert3_1&quot;, &quot;&quot;)</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF3_1} &lt; 3),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F3_1_select_rich_menu_contact_us-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF3_1&quot;)
String expected = &quot;มีหลายช่องทางในการติดต่อเรา คุณสามารถเลือกที่เมนูด้านล่าง เพื่อดูรายละเอียดเพิ่มเติมได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert3_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert3_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert3_1&quot;, &quot;false&quot;)

}</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF3_1</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert3_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F3_2_select_branch_contact" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F3_2_select_branch_contact-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_810ad492.9d0a88|btn|สำนักงานสาขา|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert3_2&quot;, &quot;&quot;)</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF3_2} &lt; 4),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F3_2_select_branch_contact-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF3_2&quot;)
String expected = &quot;Emma ขอแจ้งรายละเอียดการติดต่อสำนักงานสาขาดังนี้ค่ะ&quot;
String expected1 = &quot;คุณสามารถติดต่อสำนักงานสาขาของบริษัทฯ ได้ในเวลาทำการ: จันทร์-ศุกร์ เวลา&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert3_2_1&quot;)
String varify2 = vars.getObject(&quot;assert3_2_2&quot;)
int counter = (vars.getObject(&quot;counterF3_2&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;, response1)

log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );

if (response1.contains(expected)){
		vars.putObject(&quot;assert3_2_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert3_2_1&quot;)
		
} else if (response1.contains(expected1)) {
		vars.putObject(&quot;assert3_2_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert3_2_2&quot;)
	
}

if (counter &gt; 2 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert3_2&quot;, &quot;true&quot;)
//	log.info(&quot;This case is pass !!!!!&quot;);
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
	
} else if (counter == 3 &amp;&amp; !response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert3_2&quot;, &quot;false&quot;)
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
//	log.info(&quot;This case is failed !!!!!&quot;);
	
} else if (counter == 4 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert3_2&quot;, &quot;false&quot;)

}</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF3_2</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert3_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F3_3_select_branch" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F3_3_select_branch-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_89229742.60ea48|สาขาชลบุรี\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert3_3&quot;, &quot;&quot;)
vars.putObject(&quot;assert3_3_1&quot;, &quot;&quot;)
vars.putObject(&quot;assert3_3_2&quot;, &quot;&quot;)
vars.putObject(&quot;assert3_3_3&quot;, &quot;&quot;)</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF3_3} &lt; 5),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F3_3_select_branch-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF3_3&quot;)
String expected = &quot;บมจ.กรุงไทย-แอกซ่า ประกันชีวิต (สาขาชลบุรี) 39/4 หมู่ 3 ต.ห้วยกะปิ อ.เมือง จ.ชลบุรี 20000&quot;
String expected1 = &quot;ดูแผนที่&quot;
String expected2 = &quot;หากคุณต้องการทำรายการอื่น ๆ หรือจบบทสนทนา สามารถเลือกกดที่เมนูด้านล่างนี้ได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert3_3_1&quot;)
String varify2 = vars.getObject(&quot;assert3_3_2&quot;)
String varify3 = vars.getObject(&quot;assert3_3_3&quot;)
int counter = (vars.getObject(&quot;counterF3_3&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;, response1)

log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );

if (response1.contains(expected)){
		vars.putObject(&quot;assert3_3_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert3_3_1&quot;)
		
} else if (response1.contains(expected1)) {
		vars.putObject(&quot;assert3_3_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert3_3_2&quot;)
	
} else if (response1.contains(expected2)) {
		vars.putObject(&quot;assert3_3_3&quot;, &quot;true&quot;)	
		varify3 = vars.getObject(&quot;assert3_3_3&quot;)
}

if (counter &gt; 3 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;) &amp;&amp; varify3.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert3_3&quot;, &quot;true&quot;)
//	log.info(&quot;This case is pass !!!!!&quot;);
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
		
} else if (counter == 5 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert3_3&quot;, &quot;false&quot;)

}
</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF3_3</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert3_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="FLOW1_policy_service" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_1_select_rich_menu_policy_services" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_1_select_rich_menu_policy_services-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NA_@policy_services&amp;contextName=richmenu4&amp;contextValue=บริการกรมธรรม์|บริการกรมธรรม์\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_1&quot;, &quot;&quot;)
</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_1} &lt; 3),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_1_select_rich_menu_policy_services-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_1&quot;)
String expected = &quot;การเปลี่ยนแปลงข้อมูลกรมธรรม์&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)

if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_1&quot;, &quot;false&quot;)

}
</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF1_1</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert1_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_2_select_change_policy_info" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_2_select_change_policy_info-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_65a90434.fa287c|btn|การเปลี่ยนแปลงข้อมูลกรมธรรม์|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_2&quot;, &quot;&quot;)</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_2} &lt; 3),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_2_select_change_policy_info-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_2&quot;)
String expected = &quot;เปลี่ยนแปลงข้อมูลส่วนตัว&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)

if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	
	vars.putObject(&quot;assert1_2&quot;, &quot;false&quot;)
}
</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF1_2</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert1_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_3_select_change_personal_info" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_3_select_change_personal_info-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_97aa7cc5.79996|btn|เปลี่ยนแปลงข้อมูลส่วนตัว|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_3&quot;, &quot;&quot;)
</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_3} &lt; 3),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_3_select_change_personal_info-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">//String response1 = prev.getResponseDataAsString();
//
//vars.putObject(&quot;test1&quot;, response1);

String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_3&quot;)
String expected = &quot;การเปลี่ยนที่อยู่/เบอร์โทร/อีเมล&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_3&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_3&quot;, &quot;false&quot;)


} else if (count.equals(&quot;3&quot;)) {
	
	vars.putObject(&quot;assert1_3&quot;, &quot;false&quot;)
}
</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF1_3</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert1_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_4_select_change_address_tel_email" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_4_select_change_address_tel_email-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_3deb2685.88c3ea|btn|การเปลี่ยนที่อยู่/เบอร์โทร/อีเมล|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_4&quot;, &quot;&quot;)
</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_4} &lt; 4),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_4_select_change_address_tel_email-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_4&quot;)
String expected = &quot;การเปลี่ยนที่อยู่​/เบอร์โทร/​อีเมล&quot;
String expected1 = &quot;ขั้นตอนในการเปลี่ยน&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert1_4_1&quot;)
String varify2 = vars.getObject(&quot;assert1_4_2&quot;)
int counter = (vars.getObject(&quot;counterF1_4&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;, response1)

log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );

if (response1.contains(expected)){
		vars.putObject(&quot;assert1_4_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert1_4_1&quot;)
		
} else if (response1.contains(expected1)) {
		vars.putObject(&quot;assert1_4_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert1_4_2&quot;)
	
}

if (counter &gt; 2 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_4&quot;, &quot;true&quot;)
//	log.info(&quot;This case is pass !!!!!&quot;);
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
	
} else if (counter == 3 &amp;&amp; !response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_4&quot;, &quot;false&quot;)
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
//	log.info(&quot;This case is failed !!!!!&quot;);
	
} else if (counter == 4 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert1_4&quot;, &quot;false&quot;)

}


</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF1_4</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert1_4&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}

</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_5_select_step_to_change_policy" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_5_select_step_to_change_policy-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_8d322530.97fab8|btn|ขั้นตอนในการเปลี่ยน|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_5&quot;, &quot;&quot;)</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_5} &lt; 5),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_5_select_step_to_change_policy-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_5&quot;)
String expected1 = &quot;Emma ขออธิบายรายละเอียดดังนี้ค่ะ&quot;
String expected2 = &quot;คุณสามารถดำเนินการเปลี่ยนแปลงข้อมูลได้ตลอดเวลาโดยส่งเอกสารสำเนาบัตรประชาชนพร้อมรับรองสำเนาถูกต้อง&quot;
String expected3 = &quot;คุณต้องการเปลี่ยนที่อยู่/เบอร์โทร/อีเมล ไหมคะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert1_5_1&quot;)
String varify2 = vars.getObject(&quot;assert1_5_2&quot;)
String varify3 = vars.getObject(&quot;assert1_5_3&quot;)
int counter = (vars.getObject(&quot;counterF1_5&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;, response1)

if (response1.contains(expected1)){
		vars.putObject(&quot;assert1_5_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert1_5_1&quot;)
		
} else if (response1.contains(expected2)) {
		vars.putObject(&quot;assert1_5_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert1_5_2&quot;)
	
} else if (response1.contains(expected3)) {
		vars.putObject(&quot;assert1_5_3&quot;, &quot;true&quot;)	
		varify3 = vars.getObject(&quot;assert1_5_3&quot;)
}


if (counter &gt; 3 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;) &amp;&amp; varify3.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_5&quot;, &quot;true&quot;)
//	log.info(&quot;This case is pass !!!!!&quot;);
	
} else if (counter == 4 &amp;&amp; !response1.contains(expected2)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_5&quot;, &quot;false&quot;)
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
//	log.info(&quot;This case is failed !!!!!&quot;);
	
} else if (counter == 5 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) &amp;&amp; !varify3.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert1_5&quot;, &quot;false&quot;)

}
</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF1_5</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert1_5&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}

</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="FLOW1_1_need_to_change_personal_info" enabled="true">
              <intProp name="ThroughputController.style">1</intProp>
              <boolProp name="ThroughputController.perThread">false</boolProp>
              <intProp name="ThroughputController.maxThroughput">1</intProp>
              <FloatProperty>
                <name>ThroughputController.percentThroughput</name>
                <value>90.0</value>
                <savedValue>0.0</savedValue>
              </FloatProperty>
            </ThroughputController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_6_1_select_need_to_change" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_6_1_select_need_to_change-0" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_e969055a.cb10a8|ต้องการ\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                    <stringProp name="readTimeout">${timeout}</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_6&quot;, &quot;&quot;)</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                    <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_6} &lt; 3),)}</stringProp>
                  </WhileController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_6_1_select_need_to_change-1" enabled="true">
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server"></stringProp>
                      <stringProp name="port">80</stringProp>
                      <stringProp name="path"></stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <stringProp name="dataType">Text</stringProp>
                      <boolProp name="createNewConnection">false</boolProp>
                      <stringProp name="readTimeout">${timeout}</stringProp>
                      <boolProp name="optional">false</boolProp>
                    </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                    <hashTree>
                      <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_6&quot;)
String timeout = &quot;SET_TIMEOUT&quot;
String expectedTrue = &quot;คุณต้องการเปลี่ยนข้อมูลทุกกรมธรรม์หรือไม่คะ&quot;
String expectedFalse = &quot;ขออภัยค่ะ Emma ไม่พบกรมธรรม์ที่เชื่อมต่อไว้&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expectedTrue)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_6&quot;, &quot;true&quot;)
	vars.putObject(&quot;message&quot;, expectedTrue);

	
} else if (response1.contains(expectedFalse)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_6&quot;, &quot;true&quot;)	
	vars.putObject(&quot;message&quot;, expectedFalse);
	

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_6&quot;, &quot;false&quot;)


} else if (count.equals(&quot;3&quot;)) {
	
	vars.putObject(&quot;assert1_6&quot;, &quot;false&quot;)
}
</stringProp>
                      </JSR223PostProcessor>
                      <hashTree/>
                    </hashTree>
                    <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                      <stringProp name="CounterConfig.start">1</stringProp>
                      <stringProp name="CounterConfig.end"></stringProp>
                      <stringProp name="CounterConfig.incr">1</stringProp>
                      <stringProp name="CounterConfig.name">counterF1_6</stringProp>
                      <stringProp name="CounterConfig.format"></stringProp>
                      <boolProp name="CounterConfig.per_user">true</boolProp>
                      <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                    </CounterConfig>
                    <hashTree/>
                  </hashTree>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String assertion = vars.getObject(&quot;assert1_6&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if_no_policy_add" enabled="true">
                    <stringProp name="IfController.condition">${__jexl3(&quot;${no_policy}&quot; == &quot;${message}&quot;,)}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="read_ask_for_add_policy" enabled="true">
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server"></stringProp>
                      <stringProp name="port">80</stringProp>
                      <stringProp name="path"></stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <stringProp name="dataType">Text</stringProp>
                      <boolProp name="createNewConnection">false</boolProp>
                      <stringProp name="readTimeout">${timeout}</stringProp>
                      <boolProp name="optional">false</boolProp>
                    </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If policy added" enabled="true">
                  <stringProp name="IfController.condition">${__jexl3(&quot;${policy_added}&quot; == &quot;${message}&quot;,)}</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                  <boolProp name="IfController.useExpression">true</boolProp>
                </IfController>
                <hashTree>
                  <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="random_select_set_of_policy" enabled="true">
                    <intProp name="InterleaveControl.style">1</intProp>
                  </RandomController>
                  <hashTree>
                    <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="FLOW1_change_all_policy_service" enabled="true"/>
                    <hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_7_1_selected_change_all_policy" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_7_1_selected_change_all_policy-0" enabled="true">
                          <boolProp name="createNewConnection">false</boolProp>
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <boolProp name="binaryPayload">false</boolProp>
                          <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_2c99eb1c.2c7ca4|เปลี่ยนข้อมูลของทุกกรมธรรม์\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="loadDataFromFile">false</boolProp>
                          <stringProp name="dataFile"></stringProp>
                        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_7_1&quot;, &quot;&quot;)</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                          <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_7_1} &lt; 3),)}</stringProp>
                        </WhileController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_7_1_selected_change_all_policy-1" enabled="true">
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <stringProp name="dataType">Text</stringProp>
                            <boolProp name="createNewConnection">false</boolProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="optional">false</boolProp>
                          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_7_1&quot;)
String expected = &quot;กรุณาเลือกข้อมูลที่คุณต้องการเปลี่ยนค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)

if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_1&quot;, &quot;false&quot;)


} else if (count.equals(&quot;3&quot;)) {
	
	vars.putObject(&quot;assert1_7_1&quot;, &quot;false&quot;)
	
}</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                            <stringProp name="CounterConfig.start">1</stringProp>
                            <stringProp name="CounterConfig.end"></stringProp>
                            <stringProp name="CounterConfig.incr">1</stringProp>
                            <stringProp name="CounterConfig.name">counterF1_7_1</stringProp>
                            <stringProp name="CounterConfig.format"></stringProp>
                            <boolProp name="CounterConfig.per_user">true</boolProp>
                            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                          </CounterConfig>
                          <hashTree/>
                        </hashTree>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String assertion = vars.getObject(&quot;assert1_7_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="all_change_address" enabled="true"/>
                      <hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_8_1_select_change_address_all" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_8_1_select_change_address_all-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_6c1222b1.5d8c0c|ที่อยู่\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]
</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_8_1&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_8_1} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_8_1_select_change_address_all-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">//String response1 = prev.getResponseDataAsString();
//
//vars.putObject(&quot;test1&quot;, response1);

String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_8_1&quot;)
String expected = &quot;กรุณาระบุที่อยู่ที่คุณต้องการเปลี่ยน เพื่อให้ Emma ได้ประสานงานไปยังเจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_8_1&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_8_1</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_8_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_8_2_change_address_all" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_8_2_change_address_all-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;${address}\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_8_2&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_8_2} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_8_2_change_address_all-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_8_2&quot;)
String expected = &quot;กรุณายืนยันข้อมูลที่อยู่ที่คุณต้องการเปลี่ยนค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_8_2&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_8_2</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_8_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_8_3_confirm_change_address_all" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_8_3_confirm_change_address_all-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_61225b3b.0f3e94|ยืนยัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_8_3&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_8_3} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_8_3_confirm_change_address_all-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_8_3&quot;)
String expected = &quot;คุณต้องการเปลี่ยนข้อมูลอื่นๆ เพิ่มเติมหรือไม่คะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_3&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_3&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_8_3&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_8_3</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_8_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                      </hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="all_change_phone_number" enabled="true"/>
                      <hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_9_1_select_change_phone_number_all" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_9_1_select_change_phone_number_all-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_2d00d9dd.7d7bc6|เบอร์โทร\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_9_1&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_9_1} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_9_1_select_change_phone_number_all-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">
String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_9_1&quot;)
String expected = &quot;กรุณาระบุเบอร์โทรที่คุณต้องการเปลี่ยน เพื่อให้ Emma ได้ประสานงานไปยังเจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_9_1&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_9_1</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_9_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_9_2_change_phone_number_all" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_9_2_change_phone_number_all-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;${phone_number}\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_9_2&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_9_2} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_9_2_change_phone_number_all-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_9_2&quot;)
String expected = &quot;กรุณายืนยันข้อมูลเบอร์โทรที่คุณต้องการเปลี่ยนค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_9_2&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_9_2</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_9_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_9_3_confirm_change_phone_number_all" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_9_3_confirm_change_phone_number_all-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_6551dfde.4756f|ยืนยัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_9_3&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_9_3} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_9_3_confirm_change_phone_number_all-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_9_3&quot;)
String expected = &quot;คุณต้องการเปลี่ยนข้อมูลอื่นๆ เพิ่มเติมหรือไม่คะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_3&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_3&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_9_3&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_9_3</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_9_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                      </hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="all_change_email" enabled="true"/>
                      <hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_10_1_select_change_email_all" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_10_1_select_change_email_all-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_4efdc75b.eca618|อีเมล\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_10_1&quot;, &quot;&quot;)</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_10_1} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_10_1_select_change_email_all-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_10_1&quot;)
String expected = &quot;กรุณาระบุอีเมลที่คุณต้องการเปลี่ยน เพื่อให้ Emma ได้ประสานงานไปยังเจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_10_1&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_10_1</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_10_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_10_2_change_email_all" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_10_2_change_email_all-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;${email}\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_10_2&quot;, &quot;&quot;)</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_10_2} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_10_2_change_email_all-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_10_2&quot;)
String expected = &quot;กรุณายืนยันข้อมูลอีเมลที่คุณต้องการเปลี่ยนค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_10_2&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_10_2</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_10_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_10_3_confirm_change_email_all" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_10_3_confirm_change_email_all-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_fca7764c.508258|ยืนยัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_10_3&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_10_3} &lt; 4),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_10_3_confirm_change_email_all-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_10_3&quot;)
String expected = &quot;กรุณายืนยันข้อมูลที่คุณต้องการเปลี่ยนค่ะ&quot;
String expectedAddress = vars.get(&quot;address&quot;)
String expectedPhone = vars.get(&quot;phone_number&quot;)
String expectedEmail = vars.get(&quot;email&quot;)
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert1_10_3_1&quot;)
String varify2 = vars.getObject(&quot;assert1_10_3_2&quot;)
int counter = (vars.getObject(&quot;counterF1_10_3&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;, response1)

//log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );

if (response1.contains(expected)){
		vars.putObject(&quot;assert1_10_3_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert1_10_3_1&quot;)
		log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );
		
} else if (response1.contains(expectedAddress) &amp;&amp; response1.contains(expectedPhone) &amp;&amp; response1.contains(expectedEmail) ) {
		vars.putObject(&quot;assert1_10_3_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert1_10_3_2&quot;)
		log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );
	
} 

if (counter &gt; 2 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_3&quot;, &quot;true&quot;)
//	log.info(&quot;This case is pass !!!!!&quot;);
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
	
} else if (counter == 3 &amp;&amp; !response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_3&quot;, &quot;false&quot;)
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
//	log.info(&quot;This case is failed !!!!!&quot;);
	
} else if (counter == 4 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert1_10_3&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_10_3</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_10_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_11_finish_change_personal_info_all" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_11_finish_change_personal_info_all-0" enabled="true">
                          <boolProp name="createNewConnection">false</boolProp>
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <boolProp name="binaryPayload">false</boolProp>
                          <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_47f46a93.3f3fb4|ยืนยัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="loadDataFromFile">false</boolProp>
                          <stringProp name="dataFile"></stringProp>
                        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_11&quot;, &quot;&quot;)</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                          <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_11} &lt; 4),)}</stringProp>
                        </WhileController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_11_finish_change_personal_info_all-1" enabled="true">
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <stringProp name="dataType">Text</stringProp>
                            <boolProp name="createNewConnection">false</boolProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="optional">false</boolProp>
                          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_11&quot;)
String expected = &quot;Emma ได้ประสานงานขอเปลี่ยนข้อมูลไปยังเจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ให้คุณเรียบร้อยแล้วนะคะ&quot;
String expected1 = &quot;หากคุณต้องการทำรายการอื่น ๆ หรือจบบทสนทนา สามารถเลือกกดที่เมนูด้านล่างนี้ได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert1_11_1&quot;)
String varify2 = vars.getObject(&quot;assert1_11_2&quot;)
int counter = (vars.getObject(&quot;counterF1_11&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;, response1)

log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );

if (response1.contains(expected)){
		vars.putObject(&quot;assert1_11_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert1_11_1&quot;)
		
} else if (response1.contains(expected1)) {
		vars.putObject(&quot;assert1_11_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert1_11_2&quot;)
	
}

if (counter &gt; 2 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_11&quot;, &quot;true&quot;)
//	log.info(&quot;This case is pass !!!!!&quot;);
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
	
} else if (counter == 3 &amp;&amp; !response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_11&quot;, &quot;false&quot;)
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
//	log.info(&quot;This case is failed !!!!!&quot;);
	
} else if (counter == 4 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert1_11&quot;, &quot;false&quot;)

}
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                            <stringProp name="CounterConfig.start">1</stringProp>
                            <stringProp name="CounterConfig.end"></stringProp>
                            <stringProp name="CounterConfig.incr">1</stringProp>
                            <stringProp name="CounterConfig.name">counterF1_11</stringProp>
                            <stringProp name="CounterConfig.format"></stringProp>
                            <boolProp name="CounterConfig.per_user">true</boolProp>
                            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                          </CounterConfig>
                          <hashTree/>
                        </hashTree>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String assertion = vars.getObject(&quot;assert1_11&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}

</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="FLOW1_change_some_policy_service" enabled="true"/>
                  <hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_7_2_1_selected_change_some_policy" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_7_2_1_selected_change_some_policy-0" enabled="true">
                        <boolProp name="createNewConnection">false</boolProp>
                        <boolProp name="TLS">false</boolProp>
                        <stringProp name="server"></stringProp>
                        <stringProp name="port">80</stringProp>
                        <stringProp name="path"></stringProp>
                        <stringProp name="connectTimeout">20000</stringProp>
                        <boolProp name="binaryPayload">false</boolProp>
                        <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_2c99eb1c.2c7ca4|เปลี่ยนข้อมูลเฉพาะบางกรมธรรม์\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                        <stringProp name="readTimeout">${timeout}</stringProp>
                        <boolProp name="loadDataFromFile">false</boolProp>
                        <stringProp name="dataFile"></stringProp>
                      </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                      <hashTree>
                        <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_7_2&quot;, &quot;&quot;)</stringProp>
                        </JSR223PostProcessor>
                        <hashTree/>
                      </hashTree>
                      <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                        <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_7_2_1} &lt; 4),)}</stringProp>
                      </WhileController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_7_2_1_selected_change_some_policy-1" enabled="true">
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <stringProp name="dataType">Text</stringProp>
                          <boolProp name="createNewConnection">false</boolProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="optional">false</boolProp>
                        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_7_2_1&quot;)
String expected = &quot;Emma ยินดีให้บริการค่ะ 🙂 กรุณาเลือกกรมธรรม์ที่คุณต้องการเปลี่ยนแปลงข้อมูลที่เมนูด้านล่างนี้ได้เลยค่ะ&quot;
String expected1 = &quot;${Policy Number}&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert1_7_2_1&quot;)
String varify2 = vars.getObject(&quot;assert1_7_2_2&quot;)
int counter = (vars.getObject(&quot;counterF1_7_2_1&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;, response1)
//log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );

if (response1.contains(expected)){
		vars.putObject(&quot;assert1_7_2_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert1_7_2_1&quot;)
		log.info(&quot;varify1 is equal: &quot; + varify1);
		
} else if (response1.contains(expected1)) {
		vars.putObject(&quot;assert1_7_2_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert1_7_2_2&quot;)
	
} 

if (counter &gt; 2 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_2&quot;, &quot;true&quot;)
//	String check = vars.getObject(&quot;loop&quot;)
//	String varify = vars.getObject(&quot;assert&quot;)
//	log.info(&quot;varify2 is equal: &quot; + varify2);
//	log.info(&quot;This case is pass !!!!!&quot;);
	
} else if (counter == 3 &amp;&amp; !response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_2&quot;, &quot;false&quot;)
//	String check = vars.getObject(&quot;loop&quot;)
//	String varify = vars.getObject(&quot;assert&quot;)
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
//	log.info(&quot;This case is failed !!!!!&quot;);
	
} else if (counter == 4 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert1_7_2&quot;, &quot;false&quot;)
	String varify = vars.getObject(&quot;assert&quot;)
}</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                          <stringProp name="CounterConfig.start">1</stringProp>
                          <stringProp name="CounterConfig.end"></stringProp>
                          <stringProp name="CounterConfig.incr">1</stringProp>
                          <stringProp name="CounterConfig.name">counterF1_7_2_1</stringProp>
                          <stringProp name="CounterConfig.format"></stringProp>
                          <boolProp name="CounterConfig.per_user">true</boolProp>
                          <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                        </CounterConfig>
                        <hashTree/>
                      </hashTree>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String assertion = vars.getObject(&quot;assert1_7_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_7_2_2_selected_policy_to_change_info" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_7_2_2_selected_policy_to_change_info-0" enabled="true">
                        <boolProp name="createNewConnection">false</boolProp>
                        <boolProp name="TLS">false</boolProp>
                        <stringProp name="server"></stringProp>
                        <stringProp name="port">80</stringProp>
                        <stringProp name="path"></stringProp>
                        <stringProp name="connectTimeout">20000</stringProp>
                        <boolProp name="binaryPayload">false</boolProp>
                        <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_a3bd2cc8.4899e|btn|${Policy Number}|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                        <stringProp name="readTimeout">${timeout}</stringProp>
                        <boolProp name="loadDataFromFile">false</boolProp>
                        <stringProp name="dataFile"></stringProp>
                      </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                      <hashTree>
                        <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_7&quot;, &quot;&quot;)</stringProp>
                        </JSR223PostProcessor>
                        <hashTree/>
                      </hashTree>
                      <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                        <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_7_2_2} &lt; 3),)}</stringProp>
                      </WhileController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_7_2_2_selected_policy_to_change_info-1" enabled="true">
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <stringProp name="dataType">Text</stringProp>
                          <boolProp name="createNewConnection">false</boolProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="optional">false</boolProp>
                        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_7_2_2&quot;)
String expected = &quot;กรุณาเลือกข้อมูลที่คุณต้องการเปลี่ยนค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_7&quot;, &quot;false&quot;)

}</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                          <stringProp name="CounterConfig.start">1</stringProp>
                          <stringProp name="CounterConfig.end"></stringProp>
                          <stringProp name="CounterConfig.incr">1</stringProp>
                          <stringProp name="CounterConfig.name">counterF1_7_2_2</stringProp>
                          <stringProp name="CounterConfig.format"></stringProp>
                          <boolProp name="CounterConfig.per_user">true</boolProp>
                          <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                        </CounterConfig>
                        <hashTree/>
                      </hashTree>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String assertion = vars.getObject(&quot;assert1_7&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                    <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="some_change_address" enabled="true"/>
                    <hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_8_1_select_change_address_some" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_8_1_select_change_address_some-0" enabled="true">
                          <boolProp name="createNewConnection">false</boolProp>
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <boolProp name="binaryPayload">false</boolProp>
                          <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_6d685e5e.a263e|ที่อยู่\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]
</stringProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="loadDataFromFile">false</boolProp>
                          <stringProp name="dataFile"></stringProp>
                        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_8_1&quot;, &quot;&quot;)
</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                          <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_8_1} &lt; 3),)}</stringProp>
                        </WhileController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_8_1_select_change_address_some-1" enabled="true">
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <stringProp name="dataType">Text</stringProp>
                            <boolProp name="createNewConnection">false</boolProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="optional">false</boolProp>
                          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">//String response1 = prev.getResponseDataAsString();
//
//vars.putObject(&quot;test1&quot;, response1);

String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_8_1&quot;)
String expected = &quot;กรุณาระบุที่อยู่ที่คุณต้องการเปลี่ยน เพื่อให้ Emma ได้ประสานงานไปยังเจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_8_1&quot;, &quot;false&quot;)

}</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                            <stringProp name="CounterConfig.start">1</stringProp>
                            <stringProp name="CounterConfig.end"></stringProp>
                            <stringProp name="CounterConfig.incr">1</stringProp>
                            <stringProp name="CounterConfig.name">counterF1_8_1</stringProp>
                            <stringProp name="CounterConfig.format"></stringProp>
                            <boolProp name="CounterConfig.per_user">true</boolProp>
                            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                          </CounterConfig>
                          <hashTree/>
                        </hashTree>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String assertion = vars.getObject(&quot;assert1_8_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_8_2_change_address_some" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_8_2_change_address_some-0" enabled="true">
                          <boolProp name="createNewConnection">false</boolProp>
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <boolProp name="binaryPayload">false</boolProp>
                          <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;${address}\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="loadDataFromFile">false</boolProp>
                          <stringProp name="dataFile"></stringProp>
                        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_8_2&quot;, &quot;&quot;)
</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                          <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_8_2} &lt; 3),)}</stringProp>
                        </WhileController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_8_2_change_address_some-1" enabled="true">
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <stringProp name="dataType">Text</stringProp>
                            <boolProp name="createNewConnection">false</boolProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="optional">false</boolProp>
                          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_8_2&quot;)
String expected = &quot;กรุณายืนยันข้อมูลที่อยู่ที่คุณต้องการเปลี่ยนค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_8_2&quot;, &quot;false&quot;)

}</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                            <stringProp name="CounterConfig.start">1</stringProp>
                            <stringProp name="CounterConfig.end"></stringProp>
                            <stringProp name="CounterConfig.incr">1</stringProp>
                            <stringProp name="CounterConfig.name">counterF1_8_2</stringProp>
                            <stringProp name="CounterConfig.format"></stringProp>
                            <boolProp name="CounterConfig.per_user">true</boolProp>
                            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                          </CounterConfig>
                          <hashTree/>
                        </hashTree>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String assertion = vars.getObject(&quot;assert1_8_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_8_3_confirm_change_address_some" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_8_3_confirm_change_address_some-0" enabled="true">
                          <boolProp name="createNewConnection">false</boolProp>
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <boolProp name="binaryPayload">false</boolProp>
                          <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_3f493783.f573f8|ยืนยัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="loadDataFromFile">false</boolProp>
                          <stringProp name="dataFile"></stringProp>
                        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_8_3&quot;, &quot;&quot;)
</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                          <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_8_3} &lt; 3),)}</stringProp>
                        </WhileController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_8_3_confirm_change_address_some-1" enabled="true">
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <stringProp name="dataType">Text</stringProp>
                            <boolProp name="createNewConnection">false</boolProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="optional">false</boolProp>
                          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_8_3&quot;)
String expected = &quot;คุณต้องการเปลี่ยนข้อมูลอื่นๆ เพิ่มเติมหรือไม่คะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_3&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_3&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_8_3&quot;, &quot;false&quot;)

}</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                            <stringProp name="CounterConfig.start">1</stringProp>
                            <stringProp name="CounterConfig.end"></stringProp>
                            <stringProp name="CounterConfig.incr">1</stringProp>
                            <stringProp name="CounterConfig.name">counterF1_8_3</stringProp>
                            <stringProp name="CounterConfig.format"></stringProp>
                            <boolProp name="CounterConfig.per_user">true</boolProp>
                            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                          </CounterConfig>
                          <hashTree/>
                        </hashTree>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String assertion = vars.getObject(&quot;assert1_8_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                    <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="some_change_phone_number" enabled="true"/>
                    <hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_9_1_select_change_phone_number_some" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_9_1_select_change_phone_number_some-0" enabled="true">
                          <boolProp name="createNewConnection">false</boolProp>
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <boolProp name="binaryPayload">false</boolProp>
                          <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_c604c4ad.79f0d8|เบอร์โทร\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="loadDataFromFile">false</boolProp>
                          <stringProp name="dataFile"></stringProp>
                        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_9_1&quot;, &quot;&quot;)
</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                          <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_9_1} &lt; 3),)}</stringProp>
                        </WhileController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_9_1_select_change_phone_number_some-1" enabled="true">
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <stringProp name="dataType">Text</stringProp>
                            <boolProp name="createNewConnection">false</boolProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="optional">false</boolProp>
                          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">
String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_9_1&quot;)
String expected = &quot;กรุณาระบุเบอร์โทรที่คุณต้องการเปลี่ยน เพื่อให้ Emma ได้ประสานงานไปยังเจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_9_1&quot;, &quot;false&quot;)

}</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                            <stringProp name="CounterConfig.start">1</stringProp>
                            <stringProp name="CounterConfig.end"></stringProp>
                            <stringProp name="CounterConfig.incr">1</stringProp>
                            <stringProp name="CounterConfig.name">counterF1_9_1</stringProp>
                            <stringProp name="CounterConfig.format"></stringProp>
                            <boolProp name="CounterConfig.per_user">true</boolProp>
                            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                          </CounterConfig>
                          <hashTree/>
                        </hashTree>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String assertion = vars.getObject(&quot;assert1_9_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_9_2_change_phone_number_some" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_9_2_change_phone_number_some-0" enabled="true">
                          <boolProp name="createNewConnection">false</boolProp>
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <boolProp name="binaryPayload">false</boolProp>
                          <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;${phone_number}\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="loadDataFromFile">false</boolProp>
                          <stringProp name="dataFile"></stringProp>
                        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_9_2&quot;, &quot;&quot;)
</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                          <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_9_2} &lt; 3),)}</stringProp>
                        </WhileController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_9_2_change_phone_number_some-1" enabled="true">
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <stringProp name="dataType">Text</stringProp>
                            <boolProp name="createNewConnection">false</boolProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="optional">false</boolProp>
                          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_9_2&quot;)
String expected = &quot;กรุณายืนยันข้อมูลเบอร์โทรที่คุณต้องการเปลี่ยนค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_9_2&quot;, &quot;false&quot;)

}</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                            <stringProp name="CounterConfig.start">1</stringProp>
                            <stringProp name="CounterConfig.end"></stringProp>
                            <stringProp name="CounterConfig.incr">1</stringProp>
                            <stringProp name="CounterConfig.name">counterF1_9_2</stringProp>
                            <stringProp name="CounterConfig.format"></stringProp>
                            <boolProp name="CounterConfig.per_user">true</boolProp>
                            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                          </CounterConfig>
                          <hashTree/>
                        </hashTree>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String assertion = vars.getObject(&quot;assert1_9_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_9_3_confirm_change_phone_number_some" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_9_3_confirm_change_phone_number_some-0" enabled="true">
                          <boolProp name="createNewConnection">false</boolProp>
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <boolProp name="binaryPayload">false</boolProp>
                          <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_f517f273.4ebdc|ยืนยัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="loadDataFromFile">false</boolProp>
                          <stringProp name="dataFile"></stringProp>
                        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_9_3&quot;, &quot;&quot;)
</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                          <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_9_3} &lt; 3),)}</stringProp>
                        </WhileController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_9_3_confirm_change_phone_number_some-1" enabled="true">
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <stringProp name="dataType">Text</stringProp>
                            <boolProp name="createNewConnection">false</boolProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="optional">false</boolProp>
                          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_9_3&quot;)
String expected = &quot;คุณต้องการเปลี่ยนข้อมูลอื่นๆ เพิ่มเติมหรือไม่คะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_3&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_3&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_9_3&quot;, &quot;false&quot;)

}</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                            <stringProp name="CounterConfig.start">1</stringProp>
                            <stringProp name="CounterConfig.end"></stringProp>
                            <stringProp name="CounterConfig.incr">1</stringProp>
                            <stringProp name="CounterConfig.name">counterF1_9_3</stringProp>
                            <stringProp name="CounterConfig.format"></stringProp>
                            <boolProp name="CounterConfig.per_user">true</boolProp>
                            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                          </CounterConfig>
                          <hashTree/>
                        </hashTree>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String assertion = vars.getObject(&quot;assert1_9_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                    <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="some_change_email" enabled="true"/>
                    <hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_10_1_select_change_email_some" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_10_1_select_change_email_some-0" enabled="true">
                          <boolProp name="createNewConnection">false</boolProp>
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <boolProp name="binaryPayload">false</boolProp>
                          <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_c23eb879.6cbd88|อีเมล\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="loadDataFromFile">false</boolProp>
                          <stringProp name="dataFile"></stringProp>
                        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_10_1&quot;, &quot;&quot;)</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                          <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_10_1} &lt; 3),)}</stringProp>
                        </WhileController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_10_1_select_change_email_some-1" enabled="true">
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <stringProp name="dataType">Text</stringProp>
                            <boolProp name="createNewConnection">false</boolProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="optional">false</boolProp>
                          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_10_1&quot;)
String expected = &quot;กรุณาระบุอีเมลที่คุณต้องการเปลี่ยน เพื่อให้ Emma ได้ประสานงานไปยังเจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_10_1&quot;, &quot;false&quot;)

}</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                            <stringProp name="CounterConfig.start">1</stringProp>
                            <stringProp name="CounterConfig.end"></stringProp>
                            <stringProp name="CounterConfig.incr">1</stringProp>
                            <stringProp name="CounterConfig.name">counterF1_10_1</stringProp>
                            <stringProp name="CounterConfig.format"></stringProp>
                            <boolProp name="CounterConfig.per_user">true</boolProp>
                            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                          </CounterConfig>
                          <hashTree/>
                        </hashTree>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String assertion = vars.getObject(&quot;assert1_10_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_10_2_change_email_some" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_10_2_change_email_some-0" enabled="true">
                          <boolProp name="createNewConnection">false</boolProp>
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <boolProp name="binaryPayload">false</boolProp>
                          <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;${email}\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="loadDataFromFile">false</boolProp>
                          <stringProp name="dataFile"></stringProp>
                        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_10_2&quot;, &quot;&quot;)</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                          <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_10_2} &lt; 3),)}</stringProp>
                        </WhileController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_10_2_change_email_some-1" enabled="true">
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <stringProp name="dataType">Text</stringProp>
                            <boolProp name="createNewConnection">false</boolProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="optional">false</boolProp>
                          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_10_2&quot;)
String expected = &quot;กรุณายืนยันข้อมูลที่คุณต้องการเปลี่ยนค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)

if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_10_2&quot;, &quot;false&quot;)

}</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                            <stringProp name="CounterConfig.start">1</stringProp>
                            <stringProp name="CounterConfig.end"></stringProp>
                            <stringProp name="CounterConfig.incr">1</stringProp>
                            <stringProp name="CounterConfig.name">counterF1_10_2</stringProp>
                            <stringProp name="CounterConfig.format"></stringProp>
                            <boolProp name="CounterConfig.per_user">true</boolProp>
                            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                          </CounterConfig>
                          <hashTree/>
                        </hashTree>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String assertion = vars.getObject(&quot;assert1_10_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_10_3_confirm_change_email_some" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_10_3_confirm_change_email_some-0" enabled="true">
                          <boolProp name="createNewConnection">false</boolProp>
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <boolProp name="binaryPayload">false</boolProp>
                          <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_99faf055.a5c24|ยืนยัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="loadDataFromFile">false</boolProp>
                          <stringProp name="dataFile"></stringProp>
                        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_10_3&quot;, &quot;&quot;)
</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                          <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_10_3} &lt; 4),)}</stringProp>
                        </WhileController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_10_3_confirm_change_email_some-1" enabled="true">
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <stringProp name="dataType">Text</stringProp>
                            <boolProp name="createNewConnection">false</boolProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="optional">false</boolProp>
                          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_10_3&quot;)
String expected = &quot;กรุณายืนยันข้อมูลที่คุณต้องการเปลี่ยนค่ะ&quot;
String expectedAddress = vars.get(&quot;address&quot;)
String expectedPhone = vars.get(&quot;phone_number&quot;)
String expectedEmail = vars.get(&quot;email&quot;)
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert1_10_3_1&quot;)
String varify2 = vars.getObject(&quot;assert1_10_3_2&quot;)
int counter = (vars.getObject(&quot;counterF1_10_3&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;, response1)

//log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );

if (response1.contains(expected)){
		vars.putObject(&quot;assert1_10_3_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert1_10_3_1&quot;)
		log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );
		
} else if (response1.contains(expectedAddress) &amp;&amp; response1.contains(expectedPhone) &amp;&amp; response1.contains(expectedEmail) ) {
		vars.putObject(&quot;assert1_10_3_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert1_10_3_2&quot;)
		log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );
	
} 

if (counter &gt; 2 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_3&quot;, &quot;true&quot;)
//	log.info(&quot;This case is pass !!!!!&quot;);
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
	
} else if (counter == 3 &amp;&amp; !response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_3&quot;, &quot;false&quot;)
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
//	log.info(&quot;This case is failed !!!!!&quot;);
	
} else if (counter == 4 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert1_10_3&quot;, &quot;false&quot;)

}</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                            <stringProp name="CounterConfig.start">1</stringProp>
                            <stringProp name="CounterConfig.end"></stringProp>
                            <stringProp name="CounterConfig.incr">1</stringProp>
                            <stringProp name="CounterConfig.name">counterF1_10_3</stringProp>
                            <stringProp name="CounterConfig.format"></stringProp>
                            <boolProp name="CounterConfig.per_user">true</boolProp>
                            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                          </CounterConfig>
                          <hashTree/>
                        </hashTree>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String assertion = vars.getObject(&quot;assert1_10_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_11_finish_change_personal_info_some" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_11_finish_change_personal_info_some-0" enabled="true">
                        <boolProp name="createNewConnection">false</boolProp>
                        <boolProp name="TLS">false</boolProp>
                        <stringProp name="server"></stringProp>
                        <stringProp name="port">80</stringProp>
                        <stringProp name="path"></stringProp>
                        <stringProp name="connectTimeout">20000</stringProp>
                        <boolProp name="binaryPayload">false</boolProp>
                        <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_e69e61af.78dd7|ยืนยัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                        <stringProp name="readTimeout">${timeout}</stringProp>
                        <boolProp name="loadDataFromFile">false</boolProp>
                        <stringProp name="dataFile"></stringProp>
                      </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                      <hashTree>
                        <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_11&quot;, &quot;&quot;)</stringProp>
                        </JSR223PostProcessor>
                        <hashTree/>
                      </hashTree>
                      <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                        <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_11} &lt; 4),)}</stringProp>
                      </WhileController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_11_finish_change_personal_info_some-1" enabled="true">
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <stringProp name="dataType">Text</stringProp>
                          <boolProp name="createNewConnection">false</boolProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="optional">false</boolProp>
                        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_11&quot;)
String expected = &quot;Emma ได้ประสานงานขอเปลี่ยนข้อมูลไปยังเจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ให้คุณเรียบร้อยแล้วนะคะ&quot;
String expected1 = &quot;หากคุณต้องการทำรายการอื่น ๆ หรือจบบทสนทนา สามารถเลือกกดที่เมนูด้านล่างนี้ได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert1_11_1&quot;)
String varify2 = vars.getObject(&quot;assert1_11_2&quot;)
int counter = (vars.getObject(&quot;counterF1_11&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;, response1)

log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );

if (response1.contains(expected)){
		vars.putObject(&quot;assert1_11_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert1_11_1&quot;)
		
} else if (response1.contains(expected1)) {
		vars.putObject(&quot;assert1_11_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert1_11_2&quot;)
	
}

if (counter &gt; 2 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_11&quot;, &quot;true&quot;)
//	log.info(&quot;This case is pass !!!!!&quot;);
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
	
} else if (counter == 3 &amp;&amp; !response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_11&quot;, &quot;false&quot;)
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
//	log.info(&quot;This case is failed !!!!!&quot;);
	
} else if (counter == 4 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert1_11&quot;, &quot;false&quot;)

}
</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                          <stringProp name="CounterConfig.start">1</stringProp>
                          <stringProp name="CounterConfig.end"></stringProp>
                          <stringProp name="CounterConfig.incr">1</stringProp>
                          <stringProp name="CounterConfig.name">counterF1_11</stringProp>
                          <stringProp name="CounterConfig.format"></stringProp>
                          <boolProp name="CounterConfig.per_user">true</boolProp>
                          <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                        </CounterConfig>
                        <hashTree/>
                      </hashTree>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String assertion = vars.getObject(&quot;assert1_11&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}

</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="FLOW1_2_not_change_personal_info" enabled="true">
              <intProp name="ThroughputController.style">1</intProp>
              <boolProp name="ThroughputController.perThread">false</boolProp>
              <intProp name="ThroughputController.maxThroughput">1</intProp>
              <FloatProperty>
                <name>ThroughputController.percentThroughput</name>
                <value>10.0</value>
                <savedValue>0.0</savedValue>
              </FloatProperty>
            </ThroughputController>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_6_2_select_not_change_personal_info" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_6_2_select_not_change_personal_info-0" enabled="true">
                  <boolProp name="createNewConnection">false</boolProp>
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <boolProp name="binaryPayload">false</boolProp>
                  <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_e969055a.cb10a8|ไม่​ต้องการ\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="loadDataFromFile">false</boolProp>
                  <stringProp name="dataFile"></stringProp>
                </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_6_2&quot;, &quot;&quot;)
</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                  <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_6_2} &lt; 3),)}</stringProp>
                </WhileController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_6_2_select_not_change_personal_info-1" enabled="true">
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <stringProp name="dataType">Text</stringProp>
                    <boolProp name="createNewConnection">false</boolProp>
                    <stringProp name="readTimeout">${timeout}</stringProp>
                    <boolProp name="optional">false</boolProp>
                  </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_6_2&quot;)
String expected = &quot;หากคุณต้องการทำรายการอื่นๆ หรือจบบทสนทนาสามารถเลือกกดที่เมนูด้านล่างนี้ได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_6_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_6_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_6_2&quot;, &quot;false&quot;)

}</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                    <stringProp name="CounterConfig.start">1</stringProp>
                    <stringProp name="CounterConfig.end"></stringProp>
                    <stringProp name="CounterConfig.incr">1</stringProp>
                    <stringProp name="CounterConfig.name">counterF1_6_2</stringProp>
                    <stringProp name="CounterConfig.format"></stringProp>
                    <boolProp name="CounterConfig.per_user">true</boolProp>
                    <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                  </CounterConfig>
                  <hashTree/>
                </hashTree>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String assertion = vars.getObject(&quot;assert1_6_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="host_name" elementType="Argument">
              <stringProp name="Argument.name">host_name</stringProp>
              <stringProp name="Argument.value">emma-uat.convolab.ai</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="type" elementType="Argument">
              <stringProp name="Argument.name">type</stringProp>
              <stringProp name="Argument.value">channels-emmadev</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="no_policy" elementType="Argument">
              <stringProp name="Argument.name">no_policy</stringProp>
              <stringProp name="Argument.value">ขออภัยค่ะ Emma ไม่พบกรมธรรม์ที่เชื่อมต่อไว้</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="address" elementType="Argument">
              <stringProp name="Argument.name">address</stringProp>
              <stringProp name="Argument.value">${__RandomString(10,abcdefghijklmnopqrstuvwxyz0123456789)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="phone_number" elementType="Argument">
              <stringProp name="Argument.name">phone_number</stringProp>
              <stringProp name="Argument.value">081${__RandomString(7,1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="email" elementType="Argument">
              <stringProp name="Argument.name">email</stringProp>
              <stringProp name="Argument.value">${__RandomString(8,abcdefghijklmnopqrstuvwxyz0123456789)}@gmail.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="policy_added" elementType="Argument">
              <stringProp name="Argument.name">policy_added</stringProp>
              <stringProp name="Argument.value">คุณต้องการเปลี่ยนข้อมูลทุกกรมธรรม์หรือไม่คะ</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="timeout" elementType="Argument">
              <stringProp name="Argument.name">timeout</stringProp>
              <stringProp name="Argument.value">25000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">/Users/tanawootchawapon/Desktop/apache-jmeter-5.4.1/bin/Scripts/result5.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="jp@gc - Ultimate Thread Group" enabled="true">
        <collectionProp name="ultimatethreadgroupdata">
         <collectionProp name="480475515">
            <stringProp name="53">5</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="50547">300</stringProp>
            <stringProp name="1722">60</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="jp@gc - Throughput Shaping Timer" enabled="true">
          <collectionProp name="load_profile">
            <collectionProp name="140475104">
              <stringProp name="49">1</stringProp>
              <stringProp name="49">1</stringProp>
              <stringProp name="1722">60</stringProp>
            </collectionProp>
            <collectionProp name="1951223884">
              <stringProp name="51">3</stringProp>
              <stringProp name="51">3</stringProp>
              <stringProp name="50547">300</stringProp>
            </collectionProp>
            <collectionProp name="140475104">
              <stringProp reference="../../collectionProp/stringProp"/>
              <stringProp reference="../../collectionProp/stringProp[2]"/>
              <stringProp reference="../../collectionProp/stringProp[3]"/>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.timers.VariableThroughputTimer>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">/Users/phongsakron/Downloads/KTAXA_loadtest_user7_copy.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get_token" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;data&quot;:&quot;${RSA}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host_name}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/site/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="add_user_info" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;: &quot;loadtest&quot;,&#xd;
    &quot;MDM_ID&quot;: &quot;${MDMID}&quot;,&#xd;
    &quot;POLICY&quot;: [&#xd;
        &quot;${Policy Number}&quot;&#xd;
    ],&#xd;
    &quot;LANG&quot;: &quot;TH&quot;,&#xd;
    &quot;OS&quot;: &quot;Android&quot;,&#xd;
    &quot;locations&quot;: [&#xd;
        {&#xd;
            &quot;location&quot;: &quot;https://s3.amazonaws.com/upload.convolab.ai/react-native-webchat/convoChatWeb.html&quot;,&#xd;
            &quot;timestamp&quot;: 1625654214823&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host_name}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/site/chat/info?token=${token}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">500.0</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.OpenWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.OpenWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.OpenWebSocketSampler" testname="WebSocket Open Connection" enabled="true">
          <boolProp name="TLS">true</boolProp>
          <stringProp name="server">${host_name}</stringProp>
          <stringProp name="port">443</stringProp>
          <stringProp name="path">/ws/?type=${type}&amp;id=${uid}&amp;uuid=${__time(,)}&amp;EIO=3&amp;transport=websocket</stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="readTimeout">6000</stringProp>
        </eu.luminis.jmeter.wssampler.OpenWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="Engine_IO_ping/pong" enabled="true">
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">2probe</stringProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="Create_connection" enabled="true">
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">40/ws</stringProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="WebSocket Single Read Sampler" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="WebSocket Single Read Sampler" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="WebSocket Single Read Sampler" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree/>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="FLOW2_about_claim" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F2_1_select_rich_menu_about_claim" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F2_1_select_rich_menu_about_claim-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NA_@claim_menu&amp;contextName=richmenu&amp;contextValue=การเคลม|การเคลม\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert2_1&quot;, &quot;&quot;)
</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF2_1} &lt; 3),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F2_1_select_rich_menu_about_claim-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF2_1&quot;)
String expected = &quot;กรุณาเลือกที่เมนูด้านล่าง เพื่อดูรายละเอียดการเคลม ที่คุณต้องการได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert2_1&quot;, &quot;false&quot;)

}</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF2_1</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert2_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F2_2_select_tips_selection" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F2_2_select_tips_selection-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_c7ba744e.de19a8|btn_claim|Claim Tips|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert2_2&quot;, &quot;&quot;)</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF2_2} &lt; 3),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F2_2_select_tips_selection-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF2_2&quot;)
String expected = &quot;Tips มีทั้งหมด 4 หัวข้อ คุณสามารถเลือกที่เมนูด้านล่าง เพื่อดูรายละเอียดเพิ่มเติมได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert2_2&quot;, &quot;false&quot;)

}</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF2_2</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert2_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F2_3_select_pre_existing_condition" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F2_3_select_pre_existing_condition-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_33319349.811c3c|btn_claim|สภาพที่เป็นมาก่อนการเอาประกันภัยค่ารักษาพยาบาลและค่าชดเชยรายวัน|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert2_3&quot;, &quot;&quot;)
vars.putObject(&quot;assert2_3_1&quot;, &quot;&quot;)
vars.putObject(&quot;assert2_3_2&quot;, &quot;&quot;)</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${F2_3} &lt; 5),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F2_3_select_pre_existing_condition-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;F2_3&quot;)
String expected = &quot;บริษัทฯ จะไม่จ่ายผลประโยชน์ตามสัญญาเพิ่มเติมนี้ สำหรับโรคเรื้อรัง การเจ็บป่วย&quot;
String expected1 = &quot;หากคุณต้องการทำรายการอื่นๆ หรือจบบทสนทนา&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert2_3_1&quot;)
String varify2 = vars.getObject(&quot;assert2_3_2&quot;)
vars.putObject(&quot;responseCheck&quot;, response1)
//int counter = (vars.getObject(&quot;counterF2_3&quot;)).toInteger();

//log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );

//log.info(&quot;check varify 1 status: &quot; + varify1);
//log.info(&quot;check varify 2 status: &quot; + varify2);

if (response1.contains(expected)){
		vars.putObject(&quot;assert2_3_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert2_3_1&quot;)
		
} else if (response1.contains(expected1)) {
		vars.putObject(&quot;assert2_3_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert2_3_2&quot;)
	
}

if (varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_3&quot;, &quot;true&quot;)
//	log.info(&quot;This case is pass !!!!!&quot;);
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
		
} else if (count.equals(&quot;5&quot;) &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert2_3&quot;, &quot;false&quot;)

}
</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">F2_3</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert2_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F2_4_select_ask_for_coverage" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F2_4_select_ask_for_coverage-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_c7ba744e.de19a8|btn_claim|สอบถามความคุ้มครอง|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert2_4&quot;, &quot;&quot;)</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF2_4} &lt; 5),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F2_4_select_ask_for_coverage-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF2_4&quot;)
String expected = &quot;สอบถามความคุ้มครอง มีทั้งหมด 2 หัวข้อ คุณสามารถเลือกที่เมนูด้านล่าง เพื่อดูรายละเอียดเพิ่มเติมได้เลยค่ะ&quot;

vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_4&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_4&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert2_4&quot;, &quot;false&quot;)

}</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF2_4</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert2_4&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="F2_5_select_ask_for_opd" enabled="true"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F2_5_select_ask_for_opd" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F2_5_select_ask_for_opd-0" enabled="true">
                  <boolProp name="createNewConnection">false</boolProp>
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <boolProp name="binaryPayload">false</boolProp>
                  <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_d6f11a7d.30fec8|btn|สอบถามยอดคงเหลือความคุ้มครองผู้ป่วยนอก (OPD)|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="loadDataFromFile">false</boolProp>
                  <stringProp name="dataFile"></stringProp>
                </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert2_5&quot;, &quot;&quot;)
vars.putObject(&quot;assert2_5_is_has_policy&quot;, &quot;false&quot;)</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                  <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF2_5} &lt; 5),)}</stringProp>
                </WhileController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F2_5_select_ask_for_opd-1" enabled="true">
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <stringProp name="dataType">Text</stringProp>
                    <boolProp name="createNewConnection">false</boolProp>
                    <stringProp name="readTimeout">${timeout}</stringProp>
                    <boolProp name="optional">false</boolProp>
                  </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF2_5&quot;)
String expected = &quot;คุณต้องการเพิ่มกรมธรรม์เพื่อรับบริการตอนนี้หรือไม่คะ&quot;
String expected2 = &quot;กรุณาเลือกกรมธรรม์ที่คุณต้องการสอบถามข้อมูลได้เลยค่ะ&quot;

vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_5&quot;, &quot;true&quot;)
	vars.putObject(&quot;assert2_5_is_has_policy&quot;, &quot;false&quot;)

}else if (response1.contains(expected2)){
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_5&quot;, &quot;true&quot;)
	vars.putObject(&quot;assert2_5_is_has_policy&quot;, &quot;true&quot;)
	
	} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_5&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert2_5&quot;, &quot;false&quot;)

}</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                    <stringProp name="CounterConfig.start">1</stringProp>
                    <stringProp name="CounterConfig.end"></stringProp>
                    <stringProp name="CounterConfig.incr">1</stringProp>
                    <stringProp name="CounterConfig.name">counterF2_5</stringProp>
                    <stringProp name="CounterConfig.format"></stringProp>
                    <boolProp name="CounterConfig.per_user">true</boolProp>
                    <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                  </CounterConfig>
                  <hashTree/>
                </hashTree>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String assertion = vars.getObject(&quot;assert2_5&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="has_policy" enabled="true">
                <stringProp name="IfController.condition">${__jexl3(&quot;${assert2_5_is_has_policy}&quot; == &quot;true&quot;,)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F2_5_1_select_ask_for_opd_add_policy" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F2_5_1_select_ask_for_opd_add_policy-0" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_cccfa2a3.16e39|btn|${Policy Number}|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                    <stringProp name="readTimeout">${timeout}</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert2_5_1&quot;, &quot;&quot;)</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                    <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF2_5_1} &lt; 5),)}</stringProp>
                  </WhileController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F2_5_1_select_ask_for_opd_add_policy-1" enabled="true">
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server"></stringProp>
                      <stringProp name="port">80</stringProp>
                      <stringProp name="path"></stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <stringProp name="dataType">Text</stringProp>
                      <boolProp name="createNewConnection">false</boolProp>
                      <stringProp name="readTimeout">${timeout}</stringProp>
                      <boolProp name="optional">false</boolProp>
                    </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                    <hashTree>
                      <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF2_5_1&quot;)
String expected = &quot;ท่านสามารถใช้สิทธิค่ารักษาพยาบาล กรณีเจ็บป่วย หลังจากพ้นระยะเวลา 30 วัน&quot;

vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_5_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_5_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert2_5_1&quot;, &quot;false&quot;)

}</stringProp>
                      </JSR223PostProcessor>
                      <hashTree/>
                    </hashTree>
                    <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                      <stringProp name="CounterConfig.start">1</stringProp>
                      <stringProp name="CounterConfig.end"></stringProp>
                      <stringProp name="CounterConfig.incr">1</stringProp>
                      <stringProp name="CounterConfig.name">counterF2_5_1</stringProp>
                      <stringProp name="CounterConfig.format"></stringProp>
                      <boolProp name="CounterConfig.per_user">true</boolProp>
                      <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                    </CounterConfig>
                    <hashTree/>
                  </hashTree>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String assertion = vars.getObject(&quot;assert2_5_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="not_has_policy" enabled="true">
                <stringProp name="IfController.condition">${__jexl3(&quot;${assert2_5_is_has_policy}&quot; == &quot;false&quot;,)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F2_5_2_select_ask_for_opd_add_policy" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F2_5_2_select_ask_for_opd_add_policy-0" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_3182ace.f3b9e54|ต้องการ\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                    <stringProp name="readTimeout">${timeout}</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert2_5_2&quot;, &quot;&quot;)</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                    <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF2_5_2} &lt; 5),)}</stringProp>
                  </WhileController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F2_5_2_select_ask_for_opd_add_policy-1" enabled="true">
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server"></stringProp>
                      <stringProp name="port">80</stringProp>
                      <stringProp name="path"></stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <stringProp name="dataType">Text</stringProp>
                      <boolProp name="createNewConnection">false</boolProp>
                      <stringProp name="readTimeout">${timeout}</stringProp>
                      <boolProp name="optional">false</boolProp>
                    </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                    <hashTree>
                      <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF2_5_2&quot;)
String expected = &quot;ยินดีค่ะ ☺️&quot;

vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_5_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_5_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert2_5_2&quot;, &quot;false&quot;)

}</stringProp>
                      </JSR223PostProcessor>
                      <hashTree/>
                    </hashTree>
                    <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                      <stringProp name="CounterConfig.start">1</stringProp>
                      <stringProp name="CounterConfig.end"></stringProp>
                      <stringProp name="CounterConfig.incr">1</stringProp>
                      <stringProp name="CounterConfig.name">counterF2_5_2</stringProp>
                      <stringProp name="CounterConfig.format"></stringProp>
                      <boolProp name="CounterConfig.per_user">true</boolProp>
                      <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                    </CounterConfig>
                    <hashTree/>
                  </hashTree>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String assertion = vars.getObject(&quot;assert2_5_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F2_5_3_select_ask_for_opd_not_add_policy" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F2_5_3_select_ask_for_opd_not_add_policy-0" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_507a4a0e.a68a54|ไม่ต้อง​การ\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                    <stringProp name="readTimeout">${timeout}</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert2_5_3&quot;, &quot;&quot;)</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                    <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF2_5_3} &lt; 5),)}</stringProp>
                  </WhileController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F2_5_3_select_ask_for_opd_not_add_policy-1" enabled="true">
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server"></stringProp>
                      <stringProp name="port">80</stringProp>
                      <stringProp name="path"></stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <stringProp name="dataType">Text</stringProp>
                      <boolProp name="createNewConnection">false</boolProp>
                      <stringProp name="readTimeout">${timeout}</stringProp>
                      <boolProp name="optional">false</boolProp>
                    </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                    <hashTree>
                      <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF2_5_3&quot;)
String expected = &quot;หากคุณต้องการทำรายการอื่นๆ หรือจบบทสนทนา&quot;

vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_5_3&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_5_3&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert2_5_3&quot;, &quot;false&quot;)

}</stringProp>
                      </JSR223PostProcessor>
                      <hashTree/>
                    </hashTree>
                    <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                      <stringProp name="CounterConfig.start">1</stringProp>
                      <stringProp name="CounterConfig.end"></stringProp>
                      <stringProp name="CounterConfig.incr">1</stringProp>
                      <stringProp name="CounterConfig.name">counterF2_5_3</stringProp>
                      <stringProp name="CounterConfig.format"></stringProp>
                      <boolProp name="CounterConfig.per_user">true</boolProp>
                      <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                    </CounterConfig>
                    <hashTree/>
                  </hashTree>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String assertion = vars.getObject(&quot;assert2_5_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="F2_6_select_tracking_claim_status" enabled="true"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F2_6_select_tracking_claim_status" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F2_6_select_tracking_claim_status-0" enabled="true">
                  <boolProp name="createNewConnection">false</boolProp>
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <boolProp name="binaryPayload">false</boolProp>
                  <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_c7ba744e.de19a8|btn_claim|ติดตามสถานะการเคลมสินไหมสุขภาพ|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="loadDataFromFile">false</boolProp>
                  <stringProp name="dataFile"></stringProp>
                </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert2_6&quot;, &quot;&quot;)
vars.putObject(&quot;assert2_6_is_has_policy&quot;, &quot;false&quot;)</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                  <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF2_6} &lt; 5),)}</stringProp>
                </WhileController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F2_6_select_tracking_claim_status-1" enabled="true">
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <stringProp name="dataType">Text</stringProp>
                    <boolProp name="createNewConnection">false</boolProp>
                    <stringProp name="readTimeout">${timeout}</stringProp>
                    <boolProp name="optional">false</boolProp>
                  </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF2_6&quot;)
String expected = &quot;คุณต้องการเพิ่มกรมธรรม์เพื่อรับบริการตอนนี้หรือไม่คะ&quot;
String expected2 = &quot;กรุณาเลือกกรมธรรม์ ที่คุณต้องการสอบถามข้อมูลได้เลยค่ะ&quot;

vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_6&quot;, &quot;true&quot;)
	vars.putObject(&quot;assert2_6_is_has_policy&quot;, &quot;false&quot;)

}else if (response1.contains(expected2)){
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_6&quot;, &quot;true&quot;)
	vars.putObject(&quot;assert2_6_is_has_policy&quot;, &quot;true&quot;)
	
	} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_6&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert2_6&quot;, &quot;false&quot;)

}</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                    <stringProp name="CounterConfig.start">1</stringProp>
                    <stringProp name="CounterConfig.end"></stringProp>
                    <stringProp name="CounterConfig.incr">1</stringProp>
                    <stringProp name="CounterConfig.name">counterF2_6</stringProp>
                    <stringProp name="CounterConfig.format"></stringProp>
                    <boolProp name="CounterConfig.per_user">true</boolProp>
                    <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                  </CounterConfig>
                  <hashTree/>
                </hashTree>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String assertion = vars.getObject(&quot;assert2_6&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="has_policy" enabled="true">
                <stringProp name="IfController.condition">${__jexl3(&quot;${assert2_6_is_has_policy}&quot; == &quot;true&quot;,)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F2_6_1_tracking_claim_status_select_policy" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F2_6_1_tracking_claim_status_select_policy-0" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_cccfa2a3.16e39|btn|${Policy Number}|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                    <stringProp name="readTimeout">${timeout}</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert2_6_1&quot;, &quot;&quot;)
vars.putObject(&quot;assert2_6_1_has_cliam_status&quot;, &quot;false&quot;)</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                    <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF2_6_1} &lt; 5),)}</stringProp>
                  </WhileController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F2_6_1_tracking_claim_status_select_policy-1" enabled="true">
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server"></stringProp>
                      <stringProp name="port">80</stringProp>
                      <stringProp name="path"></stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <stringProp name="dataType">Text</stringProp>
                      <boolProp name="createNewConnection">false</boolProp>
                      <stringProp name="readTimeout">${timeout}</stringProp>
                      <boolProp name="optional">false</boolProp>
                    </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                    <hashTree>
                      <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF2_6_1&quot;)
String expected = &quot;กรุณาเลือกหมายเลขการเรียกร้องสินไหมที่คุณต้องการสอบถามข้อมูลได้เลยค่ะ&quot;
String expected2 = &quot;ขออภัยค่ะ Emma ไม่พบเอกสารเรียกร้องสินไหมของคุณค่ะ&quot;
String varify1 = vars.getObject(&quot;verify2_6_1_1&quot;)
String varify2 = vars.getObject(&quot;verify2_6_1_2&quot;)
vars.putObject(&quot;responseCheck&quot;, response1)

	
if (response1.contains(expected)) {
	vars.putObject(&quot;verify2_6_1_1&quot;, &quot;true&quot;)
	varify1 = vars.getObject(&quot;verify2_6_1_1&quot;)
}
if (response1.contains(expected2)){
	vars.putObject(&quot;verify2_6_1_2&quot;, &quot;true&quot;)
	varify1 = vars.getObject(&quot;verify2_6_1_2&quot;)
}


if (count.equals(&quot;4&quot;) ) {
	if(varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)){
		vars.putObject(&quot;loop&quot;, &quot;no&quot;)
		vars.putObject(&quot;assert2_6_1&quot;, &quot;true&quot;)
		vars.putObject(&quot;assert2_6_1_has_cliam_status&quot;, &quot;false&quot;)
	}else if(varify1.equals(&quot;true&quot;)){
		vars.putObject(&quot;loop&quot;, &quot;no&quot;)
		vars.putObject(&quot;assert2_6_1&quot;, &quot;true&quot;)
		vars.putObject(&quot;assert2_6_1_has_cliam_status&quot;, &quot;true&quot;)
	}else{
		vars.putObject(&quot;assert2_6_1&quot;, &quot;false&quot;)
	}
}</stringProp>
                      </JSR223PostProcessor>
                      <hashTree/>
                    </hashTree>
                    <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                      <stringProp name="CounterConfig.start">1</stringProp>
                      <stringProp name="CounterConfig.end"></stringProp>
                      <stringProp name="CounterConfig.incr">1</stringProp>
                      <stringProp name="CounterConfig.name">counterF2_6_1</stringProp>
                      <stringProp name="CounterConfig.format"></stringProp>
                      <boolProp name="CounterConfig.per_user">true</boolProp>
                      <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                    </CounterConfig>
                    <hashTree/>
                  </hashTree>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String assertion = vars.getObject(&quot;assert2_6_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="has_cliam_status" enabled="true">
                    <stringProp name="IfController.condition">${__jexl3(&quot;${assert2_6_1_has_cliam_status}&quot; == &quot;true&quot;,)}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F2_6_4_select_policy" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F2_6_4_select_policy-0" enabled="true">
                        <boolProp name="createNewConnection">false</boolProp>
                        <boolProp name="TLS">false</boolProp>
                        <stringProp name="server"></stringProp>
                        <stringProp name="port">80</stringProp>
                        <stringProp name="path"></stringProp>
                        <stringProp name="connectTimeout">20000</stringProp>
                        <boolProp name="binaryPayload">false</boolProp>
                        <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_d9f9a792.a6da48|btn|KAL20210136631|เลือก\&quot;,\&quot;token\&quot;:\&quot;rNOiSqnXeHL46afjAOA_FE_QD6sC2p-EWo11-diuZPB4Zi9jbnPILY34RKP0Fx5L4B8Q8DbhQjAIuXzB8Wa1Ym0Qr-pxWm7Q3fF4rxgsqr6eN2EtQT10mx2XWt87cOUd\&quot;}&quot;]</stringProp>
                        <stringProp name="readTimeout">${timeout}</stringProp>
                        <boolProp name="loadDataFromFile">false</boolProp>
                        <stringProp name="dataFile"></stringProp>
                      </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                      <hashTree>
                        <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert2_6_4&quot;, &quot;&quot;)</stringProp>
                        </JSR223PostProcessor>
                        <hashTree/>
                      </hashTree>
                      <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                        <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF2_6_4} &lt; 4),)}</stringProp>
                      </WhileController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F2_6_4_select_policy-1" enabled="true">
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <stringProp name="dataType">Text</stringProp>
                          <boolProp name="createNewConnection">false</boolProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="optional">false</boolProp>
                        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF2_6_4&quot;)
String expected = &quot;สถานะการเรียกร้องสินไหมของกรมธรรม์: ${Policy Number}&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)
if (response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_6_4&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_6_4&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert2_6_4&quot;, &quot;false&quot;)
}
</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                          <stringProp name="CounterConfig.start">1</stringProp>
                          <stringProp name="CounterConfig.end"></stringProp>
                          <stringProp name="CounterConfig.incr">1</stringProp>
                          <stringProp name="CounterConfig.name">counterF2_6_4</stringProp>
                          <stringProp name="CounterConfig.format"></stringProp>
                          <boolProp name="CounterConfig.per_user">true</boolProp>
                          <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                        </CounterConfig>
                        <hashTree/>
                      </hashTree>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String assertion = vars.getObject(&quot;assert2_6_4&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="not_has_policy" enabled="true">
                <stringProp name="IfController.condition">${__jexl3(&quot;${assert2_6_is_has_policy}&quot; == &quot;false&quot;,)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F2_6_2_tracking_claim_status_add" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F2_6_2_tracking_claim_status_add-0" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_6f211401.f4d65c|ต้องการ\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                    <stringProp name="readTimeout">${timeout}</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert2_6_2&quot;, &quot;&quot;)</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                    <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF2_6_2} &lt; 5),)}</stringProp>
                  </WhileController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F2_6_2_tracking_claim_status_add-1" enabled="true">
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server"></stringProp>
                      <stringProp name="port">80</stringProp>
                      <stringProp name="path"></stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <stringProp name="dataType">Text</stringProp>
                      <boolProp name="createNewConnection">false</boolProp>
                      <stringProp name="readTimeout">${timeout}</stringProp>
                      <boolProp name="optional">false</boolProp>
                    </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                    <hashTree>
                      <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF2_6_2&quot;)
String expected = &quot;ยินดีค่ะ ☺️&quot;

vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_6_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_6_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert2_6_2&quot;, &quot;false&quot;)

}</stringProp>
                      </JSR223PostProcessor>
                      <hashTree/>
                    </hashTree>
                    <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                      <stringProp name="CounterConfig.start">1</stringProp>
                      <stringProp name="CounterConfig.end"></stringProp>
                      <stringProp name="CounterConfig.incr">1</stringProp>
                      <stringProp name="CounterConfig.name">counterF2_6_2</stringProp>
                      <stringProp name="CounterConfig.format"></stringProp>
                      <boolProp name="CounterConfig.per_user">true</boolProp>
                      <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                    </CounterConfig>
                    <hashTree/>
                  </hashTree>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String assertion = vars.getObject(&quot;assert2_6_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F2_6_3_tracking_claim_status_not_add" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F2_6_3_tracking_claim_status_not_add-0" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_6f211401.f4d65c|ไม่​ต้อง​การ\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                    <stringProp name="readTimeout">${timeout}</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert2_6_3&quot;, &quot;&quot;)</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                    <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF2_6_3} &lt; 5),)}</stringProp>
                  </WhileController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F2_6_3_tracking_claim_status_not_add-1" enabled="true">
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server"></stringProp>
                      <stringProp name="port">80</stringProp>
                      <stringProp name="path"></stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <stringProp name="dataType">Text</stringProp>
                      <boolProp name="createNewConnection">false</boolProp>
                      <stringProp name="readTimeout">${timeout}</stringProp>
                      <boolProp name="optional">false</boolProp>
                    </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                    <hashTree>
                      <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF2_6_3&quot;)
String expected = &quot;หากคุณต้องการทำรายการอื่นๆ หรือจบบทสนทนา&quot;

vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_6_3&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert2_6_3&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert2_6_3&quot;, &quot;false&quot;)

}</stringProp>
                      </JSR223PostProcessor>
                      <hashTree/>
                    </hashTree>
                    <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                      <stringProp name="CounterConfig.start">1</stringProp>
                      <stringProp name="CounterConfig.end"></stringProp>
                      <stringProp name="CounterConfig.incr">1</stringProp>
                      <stringProp name="CounterConfig.name">counterF2_6_3</stringProp>
                      <stringProp name="CounterConfig.format"></stringProp>
                      <boolProp name="CounterConfig.per_user">true</boolProp>
                      <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                    </CounterConfig>
                    <hashTree/>
                  </hashTree>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String assertion = vars.getObject(&quot;assert2_6_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="FLOW3_contact_us" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F3_1_select_rich_menu_contact_us" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F3_1_select_rich_menu_contact_us-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NA_@contact_us&amp;contextName=richmenu4&amp;contextValue=ติดต่อเรา|ติดต่อเรา\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert3_1&quot;, &quot;&quot;)</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF3_1} &lt; 3),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F3_1_select_rich_menu_contact_us-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF3_1&quot;)
String expected = &quot;มีหลายช่องทางในการติดต่อเรา คุณสามารถเลือกที่เมนูด้านล่าง เพื่อดูรายละเอียดเพิ่มเติมได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert3_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert3_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert3_1&quot;, &quot;false&quot;)

}</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF3_1</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert3_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F3_2_select_branch_contact" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F3_2_select_branch_contact-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_810ad492.9d0a88|btn|สำนักงานสาขา|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert3_2&quot;, &quot;&quot;)</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF3_2} &lt; 4),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F3_2_select_branch_contact-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF3_2&quot;)
String expected = &quot;Emma ขอแจ้งรายละเอียดการติดต่อสำนักงานสาขาดังนี้ค่ะ&quot;
String expected1 = &quot;คุณสามารถติดต่อสำนักงานสาขาของบริษัทฯได้ในเวลาทำการ: จันทร์-ศุกร์ เวลา&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert3_2_1&quot;)
String varify2 = vars.getObject(&quot;assert3_2_2&quot;)
int counter = (vars.getObject(&quot;counterF3_2&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;, response1)

log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );

if (response1.contains(expected)){
		vars.putObject(&quot;assert3_2_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert3_2_1&quot;)
		
} else if (response1.contains(expected1)) {
		vars.putObject(&quot;assert3_2_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert3_2_2&quot;)
	
}

if (counter &gt; 2 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert3_2&quot;, &quot;true&quot;)
//	log.info(&quot;This case is pass !!!!!&quot;);
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
	
} else if (counter == 3 &amp;&amp; !response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert3_2&quot;, &quot;false&quot;)
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
//	log.info(&quot;This case is failed !!!!!&quot;);
	
} else if (counter == 4 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert3_2&quot;, &quot;false&quot;)

}</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF3_2</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert3_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F3_3_select_branch" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F3_3_select_branch-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_89229742.60ea48|สาขาชลบุรี\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert3_3&quot;, &quot;&quot;)
vars.putObject(&quot;assert3_3_1&quot;, &quot;&quot;)
vars.putObject(&quot;assert3_3_2&quot;, &quot;&quot;)
vars.putObject(&quot;assert3_3_3&quot;, &quot;&quot;)</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF3_3} &lt; 5),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F3_3_select_branch-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF3_3&quot;)
String expected = &quot;บมจ.กรุงไทย-แอกซ่า ประกันชีวิต (สาขาชลบุรี) 39/4 หมู่ 3 ต.ห้วยกะปิ อ.เมือง จ.ชลบุรี 20000&quot;
String expected1 = &quot;ดูแผนที่&quot;
String expected2 = &quot;หากคุณต้องการทำรายการอื่น ๆ หรือจบบทสนทนา สามารถเลือกกดที่เมนูด้านล่างนี้ได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert3_3_1&quot;)
String varify2 = vars.getObject(&quot;assert3_3_2&quot;)
String varify3 = vars.getObject(&quot;assert3_3_3&quot;)
int counter = (vars.getObject(&quot;counterF3_3&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;, response1)

log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );

if (response1.contains(expected)){
		vars.putObject(&quot;assert3_3_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert3_3_1&quot;)
		
} else if (response1.contains(expected1)) {
		vars.putObject(&quot;assert3_3_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert3_3_2&quot;)
	
} else if (response1.contains(expected2)) {
		vars.putObject(&quot;assert3_3_3&quot;, &quot;true&quot;)	
		varify3 = vars.getObject(&quot;assert3_3_3&quot;)
}

if (counter &gt; 3 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;) &amp;&amp; varify3.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert3_3&quot;, &quot;true&quot;)
//	log.info(&quot;This case is pass !!!!!&quot;);
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
		
} else if (counter == 5 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert3_3&quot;, &quot;false&quot;)

}
</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF3_3</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert3_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="FLOW1_policy_service" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_1_select_rich_menu_policy_services" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_1_select_rich_menu_policy_services-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NA_@policy_services&amp;contextName=richmenu4&amp;contextValue=บริการกรมธรรม์|บริการกรมธรรม์\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_1&quot;, &quot;&quot;)
</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_1} &lt; 3),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_1_select_rich_menu_policy_services-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_1&quot;)
String expected = &quot;กรุณาเลือกที่เมนูด้านล่างที่คุณต้องการสอบถามได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)

if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_1&quot;, &quot;false&quot;)

}
</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF1_1</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert1_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_2_select_change_policy_info" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_2_select_change_policy_info-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_65a90434.fa287c|btn|การเปลี่ยนแปลงข้อมูลกรมธรรม์|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_2&quot;, &quot;&quot;)</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_2} &lt; 4),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_2_select_change_policy_info-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_2&quot;)
String expected = &quot;กรุณาเลือกที่เมนูด้านล่างที่คุณต้องการสอบถามได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)
if (response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert1_2&quot;, &quot;false&quot;)
}
</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF1_2</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert1_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_3_select_change_personal_info" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_3_select_change_personal_info-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_97aa7cc5.79996|btn|เปลี่ยนแปลงข้อมูลส่วนตัว|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_3&quot;, &quot;&quot;)
</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_3} &lt; 3),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_3_select_change_personal_info-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">//String response1 = prev.getResponseDataAsString();
//
//vars.putObject(&quot;test1&quot;, response1);

String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_3&quot;)
String expected = &quot;การเปลี่ยนที่อยู่/เบอร์โทร/อีเมล&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_3&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_3&quot;, &quot;false&quot;)


} else if (count.equals(&quot;3&quot;)) {
	
	vars.putObject(&quot;assert1_3&quot;, &quot;false&quot;)
}
</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF1_3</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert1_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_4_select_change_address_tel_email" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_4_select_change_address_tel_email-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_3deb2685.88c3ea|btn|การเปลี่ยนที่อยู่/เบอร์โทร/อีเมล|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_4&quot;, &quot;&quot;)
</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_4} &lt; 4),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_4_select_change_address_tel_email-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_4&quot;)
String expected = &quot;การเปลี่ยนที่อยู่​/เบอร์โทร/​อีเมล&quot;
String expected1 = &quot;ขั้นตอนในการเปลี่ยน&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert1_4_1&quot;)
String varify2 = vars.getObject(&quot;assert1_4_2&quot;)
int counter = (vars.getObject(&quot;counterF1_4&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;, response1)

log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );

if (response1.contains(expected)){
		vars.putObject(&quot;assert1_4_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert1_4_1&quot;)
		
} ;
if (response1.contains(expected1)){
		vars.putObject(&quot;assert1_4_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert1_4_2&quot;)
	
};

if (counter &gt;= 2 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_4&quot;, &quot;true&quot;)
//	log.info(&quot;This case is pass !!!!!&quot;);
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
	
} else if (counter == 3 &amp;&amp; !response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_4&quot;, &quot;false&quot;)
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
//	log.info(&quot;This case is failed !!!!!&quot;);
	
} else if (counter == 4 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert1_4&quot;, &quot;false&quot;)

}


</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF1_4</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert1_4&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}

</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_5_select_step_to_change_policy" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_5_select_step_to_change_policy-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_8d322530.97fab8|btn|ขั้นตอนในการเปลี่ยน|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_5&quot;, &quot;&quot;)</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_5} &lt; 5),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_5_select_step_to_change_policy-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_5&quot;)

String expected2 = &quot;คุณสามารถดำเนินการเปลี่ยนแปลงข้อมูลได้ตลอดเวลาโดยส่งเอกสารสำเนาบัตรประชาชนพร้อมรับรองสำเนาถูกต้อง&quot;
String expected3 = &quot;คุณต้องการให้ Emma ช่วยเปลี่ยนที่อยู่/เบอร์โทร/อีเมล ไหมคะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify2 = vars.getObject(&quot;assert1_5_2&quot;)
String varify3 = vars.getObject(&quot;assert1_5_3&quot;)
int counter = (vars.getObject(&quot;counterF1_5&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;, response1)

 if (response1.contains(expected2)) {
		vars.putObject(&quot;assert1_5_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert1_5_2&quot;)
	
} else if (response1.contains(expected3)) {
		vars.putObject(&quot;assert1_5_3&quot;, &quot;true&quot;)	
		varify3 = vars.getObject(&quot;assert1_5_3&quot;)
}

if (counter &gt;= 3 &amp;&amp; varify2.equals(&quot;true&quot;) &amp;&amp; varify3.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_5&quot;, &quot;true&quot;)
//	log.info(&quot;This case is pass !!!!!&quot;);
	
} else if (counter == 4 &amp;&amp; !response1.contains(expected2)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_5&quot;, &quot;false&quot;)
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
//	log.info(&quot;This case is failed !!!!!&quot;);
	
} else if (counter == 5  &amp;&amp; !varify2.equals(&quot;true&quot;) &amp;&amp; !varify3.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert1_5&quot;, &quot;false&quot;)

}
</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF1_5</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert1_5&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}

</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="FLOW1_1_need_to_change_personal_info" enabled="true">
              <intProp name="ThroughputController.style">1</intProp>
              <boolProp name="ThroughputController.perThread">false</boolProp>
              <intProp name="ThroughputController.maxThroughput">1</intProp>
              <FloatProperty>
                <name>ThroughputController.percentThroughput</name>
                <value>90.0</value>
                <savedValue>0.0</savedValue>
              </FloatProperty>
            </ThroughputController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_6_1_select_need_to_change" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_6_1_select_need_to_change-0" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_e969055a.cb10a8|ต้องการ\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                    <stringProp name="readTimeout">${timeout}</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_6&quot;, &quot;&quot;)</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                    <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_6} &lt; 3),)}</stringProp>
                  </WhileController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_6_1_select_need_to_change-1" enabled="true">
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server"></stringProp>
                      <stringProp name="port">80</stringProp>
                      <stringProp name="path"></stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <stringProp name="dataType">Text</stringProp>
                      <boolProp name="createNewConnection">false</boolProp>
                      <stringProp name="readTimeout">${timeout}</stringProp>
                      <boolProp name="optional">false</boolProp>
                    </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                    <hashTree>
                      <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_6&quot;)
String timeout = &quot;SET_TIMEOUT&quot;
String expectedTrue = &quot;คุณต้องการเปลี่ยนข้อมูลทุกกรมธรรม์หรือไม่คะ&quot;
String expectedFalse = &quot;ขออภัยค่ะ Emma ไม่พบกรมธรรม์ที่เชื่อมต่อไว้&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expectedTrue)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_6&quot;, &quot;true&quot;)
	vars.putObject(&quot;message&quot;, expectedTrue);

	
} else if (response1.contains(expectedFalse)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_6&quot;, &quot;true&quot;)	
	vars.putObject(&quot;message&quot;, expectedFalse);
	

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_6&quot;, &quot;false&quot;)


} else if (count.equals(&quot;3&quot;)) {
	
	vars.putObject(&quot;assert1_6&quot;, &quot;false&quot;)
}
</stringProp>
                      </JSR223PostProcessor>
                      <hashTree/>
                    </hashTree>
                    <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                      <stringProp name="CounterConfig.start">1</stringProp>
                      <stringProp name="CounterConfig.end"></stringProp>
                      <stringProp name="CounterConfig.incr">1</stringProp>
                      <stringProp name="CounterConfig.name">counterF1_6</stringProp>
                      <stringProp name="CounterConfig.format"></stringProp>
                      <boolProp name="CounterConfig.per_user">true</boolProp>
                      <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                    </CounterConfig>
                    <hashTree/>
                  </hashTree>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String assertion = vars.getObject(&quot;assert1_6&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if_no_policy_add" enabled="true">
                    <stringProp name="IfController.condition">${__jexl3(&quot;${no_policy}&quot; == &quot;${message}&quot;,)}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="read_ask_for_add_policy" enabled="true">
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server"></stringProp>
                      <stringProp name="port">80</stringProp>
                      <stringProp name="path"></stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <stringProp name="dataType">Text</stringProp>
                      <boolProp name="createNewConnection">false</boolProp>
                      <stringProp name="readTimeout">${timeout}</stringProp>
                      <boolProp name="optional">false</boolProp>
                    </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If policy added" enabled="true">
                  <stringProp name="IfController.condition">${__jexl3(&quot;${policy_added}&quot; == &quot;${message}&quot;,)}</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                  <boolProp name="IfController.useExpression">true</boolProp>
                </IfController>
                <hashTree>
                  <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="random_select_set_of_policy" enabled="true">
                    <intProp name="InterleaveControl.style">1</intProp>
                  </RandomController>
                  <hashTree>
                    <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="FLOW1_change_all_policy_service" enabled="true"/>
                    <hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_7_1_selected_change_all_policy" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_7_1_selected_change_all_policy-0" enabled="true">
                          <boolProp name="createNewConnection">false</boolProp>
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <boolProp name="binaryPayload">false</boolProp>
                          <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_2c99eb1c.2c7ca4|เปลี่ยนข้อมูลของทุกกรมธรรม์\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="loadDataFromFile">false</boolProp>
                          <stringProp name="dataFile"></stringProp>
                        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_7_1&quot;, &quot;&quot;)</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                          <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_7_1} &lt; 3),)}</stringProp>
                        </WhileController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_7_1_selected_change_all_policy-1" enabled="true">
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <stringProp name="dataType">Text</stringProp>
                            <boolProp name="createNewConnection">false</boolProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="optional">false</boolProp>
                          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_7_1&quot;)
String expected = &quot;กรุณาเลือกข้อมูลที่คุณต้องการเปลี่ยนค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)

if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_1&quot;, &quot;false&quot;)


} else if (count.equals(&quot;3&quot;)) {
	
	vars.putObject(&quot;assert1_7_1&quot;, &quot;false&quot;)
	
}</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                            <stringProp name="CounterConfig.start">1</stringProp>
                            <stringProp name="CounterConfig.end"></stringProp>
                            <stringProp name="CounterConfig.incr">1</stringProp>
                            <stringProp name="CounterConfig.name">counterF1_7_1</stringProp>
                            <stringProp name="CounterConfig.format"></stringProp>
                            <boolProp name="CounterConfig.per_user">true</boolProp>
                            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                          </CounterConfig>
                          <hashTree/>
                        </hashTree>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String assertion = vars.getObject(&quot;assert1_7_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="all_change_address" enabled="true"/>
                      <hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_8_1_select_change_address_all" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_8_1_select_change_address_all-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_6c1222b1.5d8c0c|ที่อยู่\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]
</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_8_1&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_8_1} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_8_1_select_change_address_all-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">//String response1 = prev.getResponseDataAsString();
//
//vars.putObject(&quot;test1&quot;, response1);

String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_8_1&quot;)
String expected = &quot;กรุณาระบุที่อยู่ที่คุณต้องการเปลี่ยน เพื่อให้ Emma ได้ประสานงานไปยังเจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_8_1&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_8_1</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_8_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_8_2_change_address_all" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_8_2_change_address_all-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;${address}\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_8_2&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_8_2} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_8_2_change_address_all-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_8_2&quot;)
String expected = &quot;Please confirm the new address you have provided is correct.&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_8_2&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_8_2</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_8_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_8_3_confirm_change_address_all" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_8_3_confirm_change_address_all-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_61225b3b.0f3e94|ยืนยัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_8_3&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_8_3} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_8_3_confirm_change_address_all-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_8_3&quot;)
String expected = &quot;คุณต้องการเปลี่ยนข้อมูลอื่นๆ เพิ่มเติมหรือไม่คะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_3&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_3&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_8_3&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_8_3</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_8_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                      </hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="all_change_phone_number" enabled="true"/>
                      <hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_9_1_select_change_phone_number_all" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_9_1_select_change_phone_number_all-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_2d00d9dd.7d7bc6|เบอร์โทร\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_9_1&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_9_1} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_9_1_select_change_phone_number_all-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">
String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_9_1&quot;)
String expected = &quot;กรุณาระบุเบอร์โทรที่คุณต้องการเปลี่ยน เพื่อให้ Emma ได้ประสานงานไปยังเจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_9_1&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_9_1</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_9_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_9_2_change_phone_number_all" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_9_2_change_phone_number_all-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;${phone_number}\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_9_2&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_9_2} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_9_2_change_phone_number_all-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_9_2&quot;)
String expected = &quot;Please confirm the new contact number you have provided is correct.&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_9_2&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_9_2</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_9_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_9_3_confirm_change_phone_number_all" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_9_3_confirm_change_phone_number_all-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_f2d6c58e.43c5a8|ยืนยัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_9_3&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_9_3} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_9_3_confirm_change_phone_number_all-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_9_3&quot;)
String expected = &quot;คุณต้องการเปลี่ยนข้อมูลอื่นๆ เพิ่มเติมหรือไม่คะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_3&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_3&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_9_3&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_9_3</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_9_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                      </hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="all_change_email" enabled="true"/>
                      <hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_10_1_select_change_email_all" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_10_1_select_change_email_all-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_4efdc75b.eca618|อีเมล\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_10_1&quot;, &quot;&quot;)</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_10_1} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_10_1_select_change_email_all-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_10_1&quot;)
String expected = &quot;กรุณาระบุอีเมลที่คุณต้องการเปลี่ยน เพื่อให้ Emma ได้ประสานงานไปยังเจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_10_1&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_10_1</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_10_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_10_2_change_email_all" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_10_2_change_email_all-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;${email}\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_10_2&quot;, &quot;&quot;)</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_10_2} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_10_2_change_email_all-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_10_2&quot;)
String expected = &quot;กรุณายืนยันข้อมูลอีเมลที่คุณต้องการเปลี่ยนค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_10_2&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_10_2</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_10_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_10_3_confirm_change_email_all" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_10_3_confirm_change_email_all-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_fca7764c.508258|ยืนยัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_10_3&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_10_3} &lt; 4),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_10_3_confirm_change_email_all-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_10_3&quot;)
String expected = &quot;กรุณายืนยันข้อมูลที่คุณต้องการเปลี่ยนค่ะ&quot;
String expectedAddress = vars.get(&quot;address&quot;)
String expectedPhone = vars.get(&quot;phone_number&quot;)
String expectedEmail = vars.get(&quot;email&quot;)
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert1_10_3_1&quot;)
String varify2 = vars.getObject(&quot;assert1_10_3_2&quot;)
int counter = (vars.getObject(&quot;counterF1_10_3&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;, response1)

//log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );

if (response1.contains(expected)){
		vars.putObject(&quot;assert1_10_3_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert1_10_3_1&quot;)
		log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );
		
} else if (response1.contains(expectedAddress) &amp;&amp; response1.contains(expectedPhone) &amp;&amp; response1.contains(expectedEmail) ) {
		vars.putObject(&quot;assert1_10_3_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert1_10_3_2&quot;)
		log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );
	
} 

if (counter &gt; 2 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_3&quot;, &quot;true&quot;)
//	log.info(&quot;This case is pass !!!!!&quot;);
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
	
} else if (counter == 3 &amp;&amp; !response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_3&quot;, &quot;false&quot;)
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
//	log.info(&quot;This case is failed !!!!!&quot;);
	
} else if (counter == 4 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert1_10_3&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_10_3</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_10_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_11_finish_change_personal_info_all" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_11_finish_change_personal_info_all-0" enabled="true">
                          <boolProp name="createNewConnection">false</boolProp>
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <boolProp name="binaryPayload">false</boolProp>
                          <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_47f46a93.3f3fb4|ยืนยัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="loadDataFromFile">false</boolProp>
                          <stringProp name="dataFile"></stringProp>
                        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_11&quot;, &quot;&quot;)</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                          <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_11} &lt; 4),)}</stringProp>
                        </WhileController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_11_finish_change_personal_info_all-1" enabled="true">
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <stringProp name="dataType">Text</stringProp>
                            <boolProp name="createNewConnection">false</boolProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="optional">false</boolProp>
                          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_11&quot;)
String expected = &quot;Emma ได้ประสานงานขอเปลี่ยนข้อมูลไปยังเจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ให้คุณเรียบร้อยแล้วนะคะ&quot;
String expected1 = &quot;หากคุณต้องการทำรายการอื่น ๆ หรือจบบทสนทนา สามารถเลือกกดที่เมนูด้านล่างนี้ได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert1_11_1&quot;)
String varify2 = vars.getObject(&quot;assert1_11_2&quot;)
int counter = (vars.getObject(&quot;counterF1_11&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;, response1)

log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );

if (response1.contains(expected)){
		vars.putObject(&quot;assert1_11_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert1_11_1&quot;)
		
} else if (response1.contains(expected1)) {
		vars.putObject(&quot;assert1_11_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert1_11_2&quot;)
	
}

if (counter &gt; 2 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_11&quot;, &quot;true&quot;)
//	log.info(&quot;This case is pass !!!!!&quot;);
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
	
} else if (counter == 3 &amp;&amp; !response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_11&quot;, &quot;false&quot;)
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
//	log.info(&quot;This case is failed !!!!!&quot;);
	
} else if (counter == 4 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert1_11&quot;, &quot;false&quot;)

}
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                            <stringProp name="CounterConfig.start">1</stringProp>
                            <stringProp name="CounterConfig.end"></stringProp>
                            <stringProp name="CounterConfig.incr">1</stringProp>
                            <stringProp name="CounterConfig.name">counterF1_11</stringProp>
                            <stringProp name="CounterConfig.format"></stringProp>
                            <boolProp name="CounterConfig.per_user">true</boolProp>
                            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                          </CounterConfig>
                          <hashTree/>
                        </hashTree>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String assertion = vars.getObject(&quot;assert1_11&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}

</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_12_end_conversation_all" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_12_end_conversation_all-0" enabled="true">
                          <boolProp name="createNewConnection">false</boolProp>
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <boolProp name="binaryPayload">false</boolProp>
                          <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_30f43e2d.b2e102|จบบทสนทนา\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="loadDataFromFile">false</boolProp>
                          <stringProp name="dataFile"></stringProp>
                        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_12&quot;, &quot;&quot;)</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                          <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_12} &lt; 3),)}</stringProp>
                        </WhileController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_12_end_conversation_all-1" enabled="true">
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <stringProp name="dataType">Text</stringProp>
                            <boolProp name="createNewConnection">false</boolProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="optional">false</boolProp>
                          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_12&quot;)
String expected = &quot;โปรดช่วยให้คะแนนความพึงพอใจแก่&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_12&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_12&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_12&quot;, &quot;false&quot;)

}
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                            <stringProp name="CounterConfig.start">1</stringProp>
                            <stringProp name="CounterConfig.end"></stringProp>
                            <stringProp name="CounterConfig.incr">1</stringProp>
                            <stringProp name="CounterConfig.name">counterF1_12</stringProp>
                            <stringProp name="CounterConfig.format"></stringProp>
                            <boolProp name="CounterConfig.per_user">true</boolProp>
                            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                          </CounterConfig>
                          <hashTree/>
                        </hashTree>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String assertion = vars.getObject(&quot;assert1_12&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}

</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                    <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="FLOW1_change_some_policy_service" enabled="true"/>
                    <hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_7_2_1_selected_change_some_policy" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_7_2_1_selected_change_some_policy-0" enabled="true">
                          <boolProp name="createNewConnection">false</boolProp>
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <boolProp name="binaryPayload">false</boolProp>
                          <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_2c99eb1c.2c7ca4|เปลี่ยนข้อมูลเฉพาะบางกรมธรรม์\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="loadDataFromFile">false</boolProp>
                          <stringProp name="dataFile"></stringProp>
                        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_7_2&quot;, &quot;&quot;)</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                          <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_7_2_1} &lt; 4),)}</stringProp>
                        </WhileController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_7_2_1_selected_change_some_policy-1" enabled="true">
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <stringProp name="dataType">Text</stringProp>
                            <boolProp name="createNewConnection">false</boolProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="optional">false</boolProp>
                          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_7_2_1&quot;)
String expected = &quot;กรุณาเลือกที่เมนูด้านล่างที่คุณต้องการสอบถามได้เลยค่ะ&quot;
String expected1 = &quot;${Policy Number}&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert1_7_2_1&quot;)
String varify2 = vars.getObject(&quot;assert1_7_2_2&quot;)
int counter = (vars.getObject(&quot;counterF1_7_2_1&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;, response1)
//log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );

if (response1.contains(expected)){
		vars.putObject(&quot;assert1_7_2_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert1_7_2_1&quot;)
		log.info(&quot;varify1 is equal: &quot; + varify1);
		
} else if (response1.contains(expected1)) {
		vars.putObject(&quot;assert1_7_2_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert1_7_2_2&quot;)
	
} 

if (counter &gt; 2 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_2&quot;, &quot;true&quot;)
//	String check = vars.getObject(&quot;loop&quot;)
//	String varify = vars.getObject(&quot;assert&quot;)
//	log.info(&quot;varify2 is equal: &quot; + varify2);
//	log.info(&quot;This case is pass !!!!!&quot;);
	
} else if (counter == 3 &amp;&amp; !response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_2&quot;, &quot;false&quot;)
//	String check = vars.getObject(&quot;loop&quot;)
//	String varify = vars.getObject(&quot;assert&quot;)
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
//	log.info(&quot;This case is failed !!!!!&quot;);
	
} else if (counter == 4 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert1_7_2&quot;, &quot;false&quot;)
	String varify = vars.getObject(&quot;assert&quot;)
}</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                            <stringProp name="CounterConfig.start">1</stringProp>
                            <stringProp name="CounterConfig.end"></stringProp>
                            <stringProp name="CounterConfig.incr">1</stringProp>
                            <stringProp name="CounterConfig.name">counterF1_7_2_1</stringProp>
                            <stringProp name="CounterConfig.format"></stringProp>
                            <boolProp name="CounterConfig.per_user">true</boolProp>
                            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                          </CounterConfig>
                          <hashTree/>
                        </hashTree>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String assertion = vars.getObject(&quot;assert1_7_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_7_2_2_selected_policy_to_change_info" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_7_2_2_selected_policy_to_change_info-0" enabled="true">
                          <boolProp name="createNewConnection">false</boolProp>
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <boolProp name="binaryPayload">false</boolProp>
                          <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_a3bd2cc8.4899e|btn|${Policy Number}|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="loadDataFromFile">false</boolProp>
                          <stringProp name="dataFile"></stringProp>
                        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_7&quot;, &quot;&quot;)</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                          <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_7_2_2} &lt; 3),)}</stringProp>
                        </WhileController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_7_2_2_selected_policy_to_change_info-1" enabled="true">
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <stringProp name="dataType">Text</stringProp>
                            <boolProp name="createNewConnection">false</boolProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="optional">false</boolProp>
                          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_7_2_2&quot;)
String expected = &quot;กรุณาเลือกข้อมูลที่คุณต้องการเปลี่ยนค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_7&quot;, &quot;false&quot;)

}</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                            <stringProp name="CounterConfig.start">1</stringProp>
                            <stringProp name="CounterConfig.end"></stringProp>
                            <stringProp name="CounterConfig.incr">1</stringProp>
                            <stringProp name="CounterConfig.name">counterF1_7_2_2</stringProp>
                            <stringProp name="CounterConfig.format"></stringProp>
                            <boolProp name="CounterConfig.per_user">true</boolProp>
                            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                          </CounterConfig>
                          <hashTree/>
                        </hashTree>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String assertion = vars.getObject(&quot;assert1_7&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="some_change_address" enabled="true"/>
                      <hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_8_1_select_change_address_some" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_8_1_select_change_address_some-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_6d685e5e.a263e|ที่อยู่\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]
</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_8_1&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_8_1} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_8_1_select_change_address_some-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">//String response1 = prev.getResponseDataAsString();
//
//vars.putObject(&quot;test1&quot;, response1);

String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_8_1&quot;)
String expected = &quot;กรุณาระบุที่อยู่ที่คุณต้องการเปลี่ยน เพื่อให้ Emma ได้ประสานงานไปยังเจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_8_1&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_8_1</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_8_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_8_2_change_address_some" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_8_2_change_address_some-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;${address}\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_8_2&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_8_2} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_8_2_change_address_some-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_8_2&quot;)
String expected = &quot;กรุณายืนยันข้อมูลที่อยู่ที่คุณต้องการเปลี่ยนค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_8_2&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_8_2</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_8_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_8_3_confirm_change_address_some" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_8_3_confirm_change_address_some-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_3f493783.f573f8|ยืนยัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_8_3&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_8_3} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_8_3_confirm_change_address_some-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_8_3&quot;)
String expected = &quot;คุณต้องการเปลี่ยนข้อมูลอื่นๆ เพิ่มเติมหรือไม่คะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_3&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_8_3&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_8_3&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_8_3</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_8_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                      </hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="some_change_phone_number" enabled="true"/>
                      <hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_9_1_select_change_phone_number_some" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_9_1_select_change_phone_number_some-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_c604c4ad.79f0d8|เบอร์โทร\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_9_1&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_9_1} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_9_1_select_change_phone_number_some-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">
String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_9_1&quot;)
String expected = &quot;กรุณาระบุเบอร์โทรที่คุณต้องการเปลี่ยน เพื่อให้ Emma ได้ประสานงานไปยังเจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_9_1&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_9_1</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_9_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_9_2_change_phone_number_some" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_9_2_change_phone_number_some-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;${phone_number}\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_9_2&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_9_2} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_9_2_change_phone_number_some-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_9_2&quot;)
String expected = &quot;Please confirm the new contact number you have provided is correct.&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_9_2&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_9_2</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_9_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_9_3_confirm_change_phone_number_some" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_9_3_confirm_change_phone_number_some-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_8e11ddeb.1cb94|ยืนยัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_9_3&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_9_3} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_9_3_confirm_change_phone_number_some-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_9_3&quot;)
String expected = &quot;คุณต้องการเปลี่ยนข้อมูลอื่นๆ เพิ่มเติมหรือไม่คะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_3&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_9_3&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_9_3&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_9_3</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_9_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                      </hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="some_change_email" enabled="true"/>
                      <hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_10_1_select_change_email_some" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_10_1_select_change_email_some-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_c23eb879.6cbd88|อีเมล\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_10_1&quot;, &quot;&quot;)</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_10_1} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_10_1_select_change_email_some-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_10_1&quot;)
String expected = &quot;กรุณาระบุอีเมลที่คุณต้องการเปลี่ยน เพื่อให้ Emma ได้ประสานงานไปยังเจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_10_1&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_10_1</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_10_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_10_2_change_email_some" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_10_2_change_email_some-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;${email}\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_10_2&quot;, &quot;&quot;)</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_10_2} &lt; 3),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_10_2_change_email_some-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_10_2&quot;)
String expected = &quot;กรุณายืนยันข้อมูลที่คุณต้องการเปลี่ยนค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)

if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_10_2&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_10_2</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_10_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_10_3_confirm_change_email_some" enabled="true">
                          <boolProp name="TransactionController.includeTimers">false</boolProp>
                          <boolProp name="TransactionController.parent">false</boolProp>
                        </TransactionController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_10_3_confirm_change_email_some-0" enabled="true">
                            <boolProp name="createNewConnection">false</boolProp>
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <boolProp name="binaryPayload">false</boolProp>
                            <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_99faf055.a5c24|ยืนยัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="loadDataFromFile">false</boolProp>
                            <stringProp name="dataFile"></stringProp>
                          </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_10_3&quot;, &quot;&quot;)
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                            <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_10_3} &lt; 4),)}</stringProp>
                          </WhileController>
                          <hashTree>
                            <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_10_3_confirm_change_email_some-1" enabled="true">
                              <boolProp name="TLS">false</boolProp>
                              <stringProp name="server"></stringProp>
                              <stringProp name="port">80</stringProp>
                              <stringProp name="path"></stringProp>
                              <stringProp name="connectTimeout">20000</stringProp>
                              <stringProp name="dataType">Text</stringProp>
                              <boolProp name="createNewConnection">false</boolProp>
                              <stringProp name="readTimeout">${timeout}</stringProp>
                              <boolProp name="optional">false</boolProp>
                            </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                            <hashTree>
                              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                                <stringProp name="scriptLanguage">groovy</stringProp>
                                <stringProp name="parameters"></stringProp>
                                <stringProp name="filename"></stringProp>
                                <stringProp name="cacheKey">true</stringProp>
                                <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_10_3&quot;)
String expected = &quot;กรุณายืนยันข้อมูลที่คุณต้องการเปลี่ยนค่ะ&quot;
String expectedAddress = vars.get(&quot;address&quot;)
String expectedPhone = vars.get(&quot;phone_number&quot;)
String expectedEmail = vars.get(&quot;email&quot;)
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert1_10_3_1&quot;)
String varify2 = vars.getObject(&quot;assert1_10_3_2&quot;)
int counter = (vars.getObject(&quot;counterF1_10_3&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;, response1)

//log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );

if (response1.contains(expected)){
		vars.putObject(&quot;assert1_10_3_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert1_10_3_1&quot;)
		log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );
		
} else if (response1.contains(expectedAddress) &amp;&amp; response1.contains(expectedPhone) &amp;&amp; response1.contains(expectedEmail) ) {
		vars.putObject(&quot;assert1_10_3_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert1_10_3_2&quot;)
		log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );
	
} 

if (counter &gt; 2 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_3&quot;, &quot;true&quot;)
//	log.info(&quot;This case is pass !!!!!&quot;);
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
	
} else if (counter == 3 &amp;&amp; !response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_10_3&quot;, &quot;false&quot;)
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
//	log.info(&quot;This case is failed !!!!!&quot;);
	
} else if (counter == 4 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert1_10_3&quot;, &quot;false&quot;)

}</stringProp>
                              </JSR223PostProcessor>
                              <hashTree/>
                            </hashTree>
                            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                              <stringProp name="CounterConfig.start">1</stringProp>
                              <stringProp name="CounterConfig.end"></stringProp>
                              <stringProp name="CounterConfig.incr">1</stringProp>
                              <stringProp name="CounterConfig.name">counterF1_10_3</stringProp>
                              <stringProp name="CounterConfig.format"></stringProp>
                              <boolProp name="CounterConfig.per_user">true</boolProp>
                              <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                            </CounterConfig>
                            <hashTree/>
                          </hashTree>
                          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String assertion = vars.getObject(&quot;assert1_10_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                          </JSR223Assertion>
                          <hashTree/>
                        </hashTree>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_11_finish_change_personal_info_some" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_11_finish_change_personal_info_some-0" enabled="true">
                          <boolProp name="createNewConnection">false</boolProp>
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <boolProp name="binaryPayload">false</boolProp>
                          <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_e69e61af.78dd7|ยืนยัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="loadDataFromFile">false</boolProp>
                          <stringProp name="dataFile"></stringProp>
                        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_11&quot;, &quot;&quot;)</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                          <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_11} &lt; 4),)}</stringProp>
                        </WhileController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_11_finish_change_personal_info_some-1" enabled="true">
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <stringProp name="dataType">Text</stringProp>
                            <boolProp name="createNewConnection">false</boolProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="optional">false</boolProp>
                          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_11&quot;)
String expected = &quot;Emma ได้ประสานงานขอเปลี่ยนข้อมูลไปยังเจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ให้คุณเรียบร้อยแล้วนะคะ&quot;
String expected1 = &quot;หากคุณต้องการทำรายการอื่น ๆ หรือจบบทสนทนา สามารถเลือกกดที่เมนูด้านล่างนี้ได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert1_11_1&quot;)
String varify2 = vars.getObject(&quot;assert1_11_2&quot;)
int counter = (vars.getObject(&quot;counterF1_11&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;, response1)

log.info(&quot;Check response&quot; + counter + &quot;: &quot; + response1 );

if (response1.contains(expected)){
		vars.putObject(&quot;assert1_11_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert1_11_1&quot;)
		
} else if (response1.contains(expected1)) {
		vars.putObject(&quot;assert1_11_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert1_11_2&quot;)
	
}

if (counter &gt; 2 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_11&quot;, &quot;true&quot;)
//	log.info(&quot;This case is pass !!!!!&quot;);
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
	
} else if (counter == 3 &amp;&amp; !response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_11&quot;, &quot;false&quot;)
//	log.info(&quot;check varify 1 status: &quot; + varify1);
//	log.info(&quot;check varify 2 status: &quot; + varify2);
//	log.info(&quot;This case is failed !!!!!&quot;);
	
} else if (counter == 4 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert1_11&quot;, &quot;false&quot;)

}
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                            <stringProp name="CounterConfig.start">1</stringProp>
                            <stringProp name="CounterConfig.end"></stringProp>
                            <stringProp name="CounterConfig.incr">1</stringProp>
                            <stringProp name="CounterConfig.name">counterF1_11</stringProp>
                            <stringProp name="CounterConfig.format"></stringProp>
                            <boolProp name="CounterConfig.per_user">true</boolProp>
                            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                          </CounterConfig>
                          <hashTree/>
                        </hashTree>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String assertion = vars.getObject(&quot;assert1_11&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}

</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_12_end_conversation_some" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_12_end_conversation_some-0" enabled="true">
                          <boolProp name="createNewConnection">false</boolProp>
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <boolProp name="binaryPayload">false</boolProp>
                          <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_629ddad.4c11424|จบบทสนทนา\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="loadDataFromFile">false</boolProp>
                          <stringProp name="dataFile"></stringProp>
                        </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_12_1&quot;, &quot;&quot;)</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                          <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_12_1} &lt; 3),)}</stringProp>
                        </WhileController>
                        <hashTree>
                          <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_12_end_conversation_some-1" enabled="true">
                            <boolProp name="TLS">false</boolProp>
                            <stringProp name="server"></stringProp>
                            <stringProp name="port">80</stringProp>
                            <stringProp name="path"></stringProp>
                            <stringProp name="connectTimeout">20000</stringProp>
                            <stringProp name="dataType">Text</stringProp>
                            <boolProp name="createNewConnection">false</boolProp>
                            <stringProp name="readTimeout">${timeout}</stringProp>
                            <boolProp name="optional">false</boolProp>
                          </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                          <hashTree>
                            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                              <stringProp name="scriptLanguage">groovy</stringProp>
                              <stringProp name="parameters"></stringProp>
                              <stringProp name="filename"></stringProp>
                              <stringProp name="cacheKey">true</stringProp>
                              <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_12_1&quot;)
String expected = &quot;โปรดช่วยให้คะแนนความพึงพอใจแก่&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_12_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_12_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_12_1&quot;, &quot;false&quot;)

}
</stringProp>
                            </JSR223PostProcessor>
                            <hashTree/>
                          </hashTree>
                          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                            <stringProp name="CounterConfig.start">1</stringProp>
                            <stringProp name="CounterConfig.end"></stringProp>
                            <stringProp name="CounterConfig.incr">1</stringProp>
                            <stringProp name="CounterConfig.name">counterF1_12_1</stringProp>
                            <stringProp name="CounterConfig.format"></stringProp>
                            <boolProp name="CounterConfig.per_user">true</boolProp>
                            <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                          </CounterConfig>
                          <hashTree/>
                        </hashTree>
                        <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String assertion = vars.getObject(&quot;assert1_12_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}

</stringProp>
                        </JSR223Assertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="FLOW1_2_not_change_personal_info" enabled="true">
              <intProp name="ThroughputController.style">1</intProp>
              <boolProp name="ThroughputController.perThread">false</boolProp>
              <intProp name="ThroughputController.maxThroughput">1</intProp>
              <FloatProperty>
                <name>ThroughputController.percentThroughput</name>
                <value>10.0</value>
                <savedValue>0.0</savedValue>
              </FloatProperty>
            </ThroughputController>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_6_2_select_not_change_personal_info" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_6_2_select_not_change_personal_info-0" enabled="true">
                  <boolProp name="createNewConnection">false</boolProp>
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <boolProp name="binaryPayload">false</boolProp>
                  <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_e969055a.cb10a8|ไม่​ต้องการ\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="loadDataFromFile">false</boolProp>
                  <stringProp name="dataFile"></stringProp>
                </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_6_2&quot;, &quot;&quot;)
</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                  <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_6_2} &lt; 3),)}</stringProp>
                </WhileController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_6_2_select_not_change_personal_info-1" enabled="true">
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <stringProp name="dataType">Text</stringProp>
                    <boolProp name="createNewConnection">false</boolProp>
                    <stringProp name="readTimeout">${timeout}</stringProp>
                    <boolProp name="optional">false</boolProp>
                  </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_6_2&quot;)
String expected = &quot;หากคุณต้องการทำรายการอื่นๆ หรือจบบทสนทนาสามารถเลือกกดที่เมนูด้านล่างนี้ได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_6_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_6_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert1_6_2&quot;, &quot;false&quot;)

}</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                    <stringProp name="CounterConfig.start">1</stringProp>
                    <stringProp name="CounterConfig.end"></stringProp>
                    <stringProp name="CounterConfig.incr">1</stringProp>
                    <stringProp name="CounterConfig.name">counterF1_6_2</stringProp>
                    <stringProp name="CounterConfig.format"></stringProp>
                    <boolProp name="CounterConfig.per_user">true</boolProp>
                    <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                  </CounterConfig>
                  <hashTree/>
                </hashTree>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String assertion = vars.getObject(&quot;assert1_6_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="F1_7_change_installment_payment" enabled="true"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_7_1_change_installment_payment" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_7_1_change_installment_payment-0" enabled="true">
                  <boolProp name="createNewConnection">false</boolProp>
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <boolProp name="binaryPayload">false</boolProp>
                  <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_97aa7cc5.79996|btn|เปลี่ยนงวดการชำระ|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="loadDataFromFile">false</boolProp>
                  <stringProp name="dataFile"></stringProp>
                </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_7_1&quot;, &quot;&quot;)</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                  <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_7_1} &lt; 4),)}</stringProp>
                </WhileController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_7_1_change_installment_payment-1" enabled="true">
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <stringProp name="dataType">Text</stringProp>
                    <boolProp name="createNewConnection">false</boolProp>
                    <stringProp name="readTimeout">${timeout}</stringProp>
                    <boolProp name="optional">false</boolProp>
                  </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_7_1&quot;)
String expected = &quot;การเปลี่ยนงวดการชำระเบี้ยประกัน มีทั้งหมด 3 หัวข้อ กรุณาเลือกที่เมนูด้านล่าง ที่คุณต้องการได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)
if (response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert1_7_1&quot;, &quot;false&quot;)
}
</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                    <stringProp name="CounterConfig.start">1</stringProp>
                    <stringProp name="CounterConfig.end"></stringProp>
                    <stringProp name="CounterConfig.incr">1</stringProp>
                    <stringProp name="CounterConfig.name">counterF1_7_1</stringProp>
                    <stringProp name="CounterConfig.format"></stringProp>
                    <boolProp name="CounterConfig.per_user">true</boolProp>
                    <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                  </CounterConfig>
                  <hashTree/>
                </hashTree>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String assertion = vars.getObject(&quot;assert1_7_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_7_2_ask_for_the_amount_after_change_installment" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_7_2_ask_for_the_amount_after_change_installment-0" enabled="true">
                  <boolProp name="createNewConnection">false</boolProp>
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <boolProp name="binaryPayload">false</boolProp>
                  <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_1cbf8d5e.871c53|btn|ขอทราบยอดเบี้ยประกันที่ต้องชำระหลังเปลี่ยนงวดการชำระ|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="loadDataFromFile">false</boolProp>
                  <stringProp name="dataFile"></stringProp>
                </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_7_2&quot;, &quot;&quot;)
vars.putObject(&quot;assert1_7_2_is_out_of_service&quot;, &quot;false&quot;)</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                  <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_7_2} &lt; 4),)}</stringProp>
                </WhileController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_7_2_ask_for_the_amount_after_change_installment-1" enabled="true">
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <stringProp name="dataType">Text</stringProp>
                    <boolProp name="createNewConnection">false</boolProp>
                    <stringProp name="readTimeout">${timeout}</stringProp>
                    <boolProp name="optional">false</boolProp>
                  </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_7_2&quot;)
String expected = &quot;คุณต้องการให้เจ้าหน้าที่ติดต่อกลับในภายหลังหรือไม่คะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)
if (response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_2&quot;, &quot;true&quot;)
	vars.putObject(&quot;assert1_7_2_is_out_of_service&quot;, &quot;true&quot;)
} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert1_7_2&quot;, &quot;false&quot;)
}
</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                    <stringProp name="CounterConfig.start">1</stringProp>
                    <stringProp name="CounterConfig.end"></stringProp>
                    <stringProp name="CounterConfig.incr">1</stringProp>
                    <stringProp name="CounterConfig.name">counterF1_7_2</stringProp>
                    <stringProp name="CounterConfig.format"></stringProp>
                    <boolProp name="CounterConfig.per_user">true</boolProp>
                    <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                  </CounterConfig>
                  <hashTree/>
                </hashTree>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String assertion = vars.getObject(&quot;assert1_7_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="is_out_of_service" enabled="true">
                <stringProp name="IfController.condition">${__jexl3(&quot;${assert1_7_2_is_out_of_service}&quot; == &quot;true&quot;,)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_7_3_select_need_contact_back" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_7_3_select_need_contact_back-0" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_167a334f.e7a21d|ต้องการ\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                    <stringProp name="readTimeout">${timeout}</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_7_3&quot;, &quot;&quot;)
vars.putObject(&quot;assert1_7_3_is_have_policy&quot;, &quot;false&quot;)</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                    <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_7_3} &lt; 5),)}</stringProp>
                  </WhileController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_7_3_select_need_contact_back-1" enabled="true">
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server"></stringProp>
                      <stringProp name="port">80</stringProp>
                      <stringProp name="path"></stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <stringProp name="dataType">Text</stringProp>
                      <boolProp name="createNewConnection">false</boolProp>
                      <stringProp name="readTimeout">${timeout}</stringProp>
                      <boolProp name="optional">false</boolProp>
                    </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                    <hashTree>
                      <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_7_3&quot;)
String expected = &quot;ขออภัยค่ะ Emma ไม่พบกรมธรรม์ที่เชื่อมต่อไว้ หรือ กรมธรรม์ที่ท่านเพิ่มไว้ไม่เข้าเงื่อนไขคำขอเปลี่ยนแปลงนี้&quot;
String expected2 = &quot;กรุณาเลือกกรมธรรม์ ที่คุณต้องการสอบถามข้อมูลได้เลยค่ะ&quot;

vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_3&quot;, &quot;true&quot;)
} else if (response1.contains(expected2)) {
	vars.putObject(&quot;assert1_7_3_is_have_policy&quot;, &quot;true&quot;)
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_3&quot;, &quot;true&quot;)
} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_3&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert1_7_3&quot;, &quot;false&quot;)

}</stringProp>
                      </JSR223PostProcessor>
                      <hashTree/>
                    </hashTree>
                    <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                      <stringProp name="CounterConfig.start">1</stringProp>
                      <stringProp name="CounterConfig.end"></stringProp>
                      <stringProp name="CounterConfig.incr">1</stringProp>
                      <stringProp name="CounterConfig.name">counterF1_7_3</stringProp>
                      <stringProp name="CounterConfig.format"></stringProp>
                      <boolProp name="CounterConfig.per_user">true</boolProp>
                      <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                    </CounterConfig>
                    <hashTree/>
                  </hashTree>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String assertion = vars.getObject(&quot;assert1_7_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="has_policy" enabled="true">
                    <stringProp name="IfController.condition">${__jexl3(&quot;${assert1_7_3_is_have_policy}&quot; == &quot;true&quot;,)}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_7_4_select_policy" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_7_4_select_policy-0" enabled="true">
                        <boolProp name="createNewConnection">false</boolProp>
                        <boolProp name="TLS">false</boolProp>
                        <stringProp name="server"></stringProp>
                        <stringProp name="port">80</stringProp>
                        <stringProp name="path"></stringProp>
                        <stringProp name="connectTimeout">20000</stringProp>
                        <boolProp name="binaryPayload">false</boolProp>
                        <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_2e4bcd6f.4f93d2|btn|${Policy Number}|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                        <stringProp name="readTimeout">${timeout}</stringProp>
                        <boolProp name="loadDataFromFile">false</boolProp>
                        <stringProp name="dataFile"></stringProp>
                      </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                      <hashTree>
                        <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_7_4&quot;, &quot;&quot;)</stringProp>
                        </JSR223PostProcessor>
                        <hashTree/>
                      </hashTree>
                      <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                        <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_7_4} &lt; 4),)}</stringProp>
                      </WhileController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_7_4_select_policy-1" enabled="true">
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <stringProp name="dataType">Text</stringProp>
                          <boolProp name="createNewConnection">false</boolProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="optional">false</boolProp>
                        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_7_4&quot;)
String expected = &quot;กรุณาเลือกที่เมนูด้านล่างที่คุณต้องการสอบถามได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)
if (response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_4&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_4&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert1_7_4&quot;, &quot;false&quot;)
}
</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                          <stringProp name="CounterConfig.start">1</stringProp>
                          <stringProp name="CounterConfig.end"></stringProp>
                          <stringProp name="CounterConfig.incr">1</stringProp>
                          <stringProp name="CounterConfig.name">counterF1_7_4</stringProp>
                          <stringProp name="CounterConfig.format"></stringProp>
                          <boolProp name="CounterConfig.per_user">true</boolProp>
                          <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                        </CounterConfig>
                        <hashTree/>
                      </hashTree>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String assertion = vars.getObject(&quot;assert1_7_4&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_7_5_select_payment" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_7_5_select_payment-0" enabled="true">
                        <boolProp name="createNewConnection">false</boolProp>
                        <boolProp name="TLS">false</boolProp>
                        <stringProp name="server"></stringProp>
                        <stringProp name="port">80</stringProp>
                        <stringProp name="path"></stringProp>
                        <stringProp name="connectTimeout">20000</stringProp>
                        <boolProp name="binaryPayload">false</boolProp>
                        <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_b5d14f0e.ffbab|รายเดือน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                        <stringProp name="readTimeout">${timeout}</stringProp>
                        <boolProp name="loadDataFromFile">false</boolProp>
                        <stringProp name="dataFile"></stringProp>
                      </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                      <hashTree>
                        <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_7_5&quot;, &quot;&quot;)</stringProp>
                        </JSR223PostProcessor>
                        <hashTree/>
                      </hashTree>
                      <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                        <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_7_5} &lt; 4),)}</stringProp>
                      </WhileController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_7_5_select_payment-1" enabled="true">
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <stringProp name="dataType">Text</stringProp>
                          <boolProp name="createNewConnection">false</boolProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="optional">false</boolProp>
                        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_7_5&quot;)
String expected = &quot;กรุณาเลือกช่องทางที่ต้องการให้เจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ติดต่อกลับค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)
if (response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_5&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_5&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert1_7_5&quot;, &quot;false&quot;)
}
</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                          <stringProp name="CounterConfig.start">1</stringProp>
                          <stringProp name="CounterConfig.end"></stringProp>
                          <stringProp name="CounterConfig.incr">1</stringProp>
                          <stringProp name="CounterConfig.name">counterF1_7_5</stringProp>
                          <stringProp name="CounterConfig.format"></stringProp>
                          <boolProp name="CounterConfig.per_user">true</boolProp>
                          <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                        </CounterConfig>
                        <hashTree/>
                      </hashTree>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String assertion = vars.getObject(&quot;assert1_7_5&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_7_6_select_number_for_contact_back" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_7_6_select_number_for_contact_back-0" enabled="true">
                        <boolProp name="createNewConnection">false</boolProp>
                        <boolProp name="TLS">false</boolProp>
                        <stringProp name="server"></stringProp>
                        <stringProp name="port">80</stringProp>
                        <stringProp name="path"></stringProp>
                        <stringProp name="connectTimeout">20000</stringProp>
                        <boolProp name="binaryPayload">false</boolProp>
                        <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_4ef26cf4.b30424|โทรศัพท์มือถือ\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                        <stringProp name="readTimeout">${timeout}</stringProp>
                        <boolProp name="loadDataFromFile">false</boolProp>
                        <stringProp name="dataFile"></stringProp>
                      </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                      <hashTree>
                        <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_7_6&quot;, &quot;&quot;)</stringProp>
                        </JSR223PostProcessor>
                        <hashTree/>
                      </hashTree>
                      <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                        <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_7_6} &lt; 4),)}</stringProp>
                      </WhileController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_7_6_select_number_for_contact_back-1" enabled="true">
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <stringProp name="dataType">Text</stringProp>
                          <boolProp name="createNewConnection">false</boolProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="optional">false</boolProp>
                        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_7_6&quot;)
String expected = &quot;คุณต้องการให้เจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ติดต่อกลับที่เบอร์โทรศัพท์&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)
if (response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_6&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_6&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert1_7_6&quot;, &quot;false&quot;)
}
</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                          <stringProp name="CounterConfig.start">1</stringProp>
                          <stringProp name="CounterConfig.end"></stringProp>
                          <stringProp name="CounterConfig.incr">1</stringProp>
                          <stringProp name="CounterConfig.name">counterF1_7_6</stringProp>
                          <stringProp name="CounterConfig.format"></stringProp>
                          <boolProp name="CounterConfig.per_user">true</boolProp>
                          <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                        </CounterConfig>
                        <hashTree/>
                      </hashTree>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String assertion = vars.getObject(&quot;assert1_7_6&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_7_7_select_number_for_contact_back_confirm" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_7_7_select_number_for_contact_back_confirm-0" enabled="true">
                        <boolProp name="createNewConnection">false</boolProp>
                        <boolProp name="TLS">false</boolProp>
                        <stringProp name="server"></stringProp>
                        <stringProp name="port">80</stringProp>
                        <stringProp name="path"></stringProp>
                        <stringProp name="connectTimeout">20000</stringProp>
                        <boolProp name="binaryPayload">false</boolProp>
                        <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_cce8b403.c28798|ยืนยัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                        <stringProp name="readTimeout">${timeout}</stringProp>
                        <boolProp name="loadDataFromFile">false</boolProp>
                        <stringProp name="dataFile"></stringProp>
                      </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                      <hashTree>
                        <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_7_7&quot;, &quot;&quot;)</stringProp>
                        </JSR223PostProcessor>
                        <hashTree/>
                      </hashTree>
                      <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                        <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_7_7} &lt; 4),)}</stringProp>
                      </WhileController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_7_7_select_number_for_contact_back_confirm-1" enabled="true">
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <stringProp name="dataType">Text</stringProp>
                          <boolProp name="createNewConnection">false</boolProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="optional">false</boolProp>
                        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_7_7&quot;)
String expected = &quot;ยินดีค่ะ Emma จะประสานงานกับเจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ให้ติดต่อไปยังโทรศัพท์มือถือที่คุณแจ้งไว้โดยเร็วที่สุดนะคะ &quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)
if (response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_7&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_7&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert1_7_7&quot;, &quot;false&quot;)
}
</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                          <stringProp name="CounterConfig.start">1</stringProp>
                          <stringProp name="CounterConfig.end"></stringProp>
                          <stringProp name="CounterConfig.incr">1</stringProp>
                          <stringProp name="CounterConfig.name">counterF1_7_7</stringProp>
                          <stringProp name="CounterConfig.format"></stringProp>
                          <boolProp name="CounterConfig.per_user">true</boolProp>
                          <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                        </CounterConfig>
                        <hashTree/>
                      </hashTree>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String assertion = vars.getObject(&quot;assert1_7_7&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="not_has_policy" enabled="true">
                    <stringProp name="IfController.condition">${__jexl3(&quot;${assert1_7_3_is_have_policy}&quot; == &quot;false&quot;,)}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                    <boolProp name="IfController.useExpression">true</boolProp>
                  </IfController>
                  <hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_7_8_tracking_claim_status_add" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_7_8_tracking_claim_status_add-0" enabled="true">
                        <boolProp name="createNewConnection">false</boolProp>
                        <boolProp name="TLS">false</boolProp>
                        <stringProp name="server"></stringProp>
                        <stringProp name="port">80</stringProp>
                        <stringProp name="path"></stringProp>
                        <stringProp name="connectTimeout">20000</stringProp>
                        <boolProp name="binaryPayload">false</boolProp>
                        <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_9558f2f.b09ed1|ต้องการ\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                        <stringProp name="readTimeout">${timeout}</stringProp>
                        <boolProp name="loadDataFromFile">false</boolProp>
                        <stringProp name="dataFile"></stringProp>
                      </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                      <hashTree>
                        <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_7_8&quot;, &quot;&quot;)</stringProp>
                        </JSR223PostProcessor>
                        <hashTree/>
                      </hashTree>
                      <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                        <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_7_8} &lt; 5),)}</stringProp>
                      </WhileController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_7_8_tracking_claim_status_add-1" enabled="true">
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <stringProp name="dataType">Text</stringProp>
                          <boolProp name="createNewConnection">false</boolProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="optional">false</boolProp>
                        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_7_8&quot;)
String expected = &quot;ยินดีค่ะ ☺️&quot;

vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_8&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_8&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert1_7_8&quot;, &quot;false&quot;)

}</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                          <stringProp name="CounterConfig.start">1</stringProp>
                          <stringProp name="CounterConfig.end"></stringProp>
                          <stringProp name="CounterConfig.incr">1</stringProp>
                          <stringProp name="CounterConfig.name">counterF1_7_8</stringProp>
                          <stringProp name="CounterConfig.format"></stringProp>
                          <boolProp name="CounterConfig.per_user">true</boolProp>
                          <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                        </CounterConfig>
                        <hashTree/>
                      </hashTree>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String assertion = vars.getObject(&quot;assert1_7_8&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F1_7_9_tracking_claim_status_not_add" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F1_7_9_tracking_claim_status_not_add-0" enabled="true">
                        <boolProp name="createNewConnection">false</boolProp>
                        <boolProp name="TLS">false</boolProp>
                        <stringProp name="server"></stringProp>
                        <stringProp name="port">80</stringProp>
                        <stringProp name="path"></stringProp>
                        <stringProp name="connectTimeout">20000</stringProp>
                        <boolProp name="binaryPayload">false</boolProp>
                        <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_9558f2f.b09ed1|ไม่​ต้อง​การ\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                        <stringProp name="readTimeout">${timeout}</stringProp>
                        <boolProp name="loadDataFromFile">false</boolProp>
                        <stringProp name="dataFile"></stringProp>
                      </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                      <hashTree>
                        <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert1_7_9&quot;, &quot;&quot;)</stringProp>
                        </JSR223PostProcessor>
                        <hashTree/>
                      </hashTree>
                      <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                        <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF1_7_9} &lt; 5),)}</stringProp>
                      </WhileController>
                      <hashTree>
                        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F1_7_9_tracking_claim_status_not_add-1" enabled="true">
                          <boolProp name="TLS">false</boolProp>
                          <stringProp name="server"></stringProp>
                          <stringProp name="port">80</stringProp>
                          <stringProp name="path"></stringProp>
                          <stringProp name="connectTimeout">20000</stringProp>
                          <stringProp name="dataType">Text</stringProp>
                          <boolProp name="createNewConnection">false</boolProp>
                          <stringProp name="readTimeout">${timeout}</stringProp>
                          <boolProp name="optional">false</boolProp>
                        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                        <hashTree>
                          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                            <stringProp name="scriptLanguage">groovy</stringProp>
                            <stringProp name="parameters"></stringProp>
                            <stringProp name="filename"></stringProp>
                            <stringProp name="cacheKey">true</stringProp>
                            <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF1_7_9&quot;)
String expected = &quot;หากคุณต้องการทำรายการอื่นๆ หรือจบบทสนทนา&quot;

vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_9&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert1_7_9&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert1_7_9&quot;, &quot;false&quot;)

}</stringProp>
                          </JSR223PostProcessor>
                          <hashTree/>
                        </hashTree>
                        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                          <stringProp name="CounterConfig.start">1</stringProp>
                          <stringProp name="CounterConfig.end"></stringProp>
                          <stringProp name="CounterConfig.incr">1</stringProp>
                          <stringProp name="CounterConfig.name">counterF1_7_9</stringProp>
                          <stringProp name="CounterConfig.format"></stringProp>
                          <boolProp name="CounterConfig.per_user">true</boolProp>
                          <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                        </CounterConfig>
                        <hashTree/>
                      </hashTree>
                      <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String assertion = vars.getObject(&quot;assert1_7_9&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}</stringProp>
                      </JSR223Assertion>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="FLOW4_premiumpayment" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>100.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F4_1_select_rich_premium_payment_claim" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F4_1_select_rich_menu_premium_payment-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NA_@premium_payment&amp;contextName=richmenu&amp;contextValue=เบี้ยประกัน|เบี้ยประกัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert4_1&quot;, &quot;&quot;)
</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF4_1} &lt; 3),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F4_1_select_rich_premium_payment_claim-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF4_1&quot;)
String expected = &quot;วิธีในการชำระเบี้ยประกันภัย คุณสามารถเลือกที่เมนูด้านล่าง เพื่อดูรายละเอียดเพิ่มเติมได้เลยค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;2&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;3&quot;)) {
	vars.putObject(&quot;assert4_1&quot;, &quot;false&quot;)

}</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF4_1</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert4_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="F4_2_premiumpayment_check" enabled="true"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F4_2_view_premiumpayment_detail" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F4_2_view_premiumpayment_detail-0" enabled="true">
                  <boolProp name="createNewConnection">false</boolProp>
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <boolProp name="binaryPayload">false</boolProp>
                  <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_fc52ce98.4c5a6|btn|เบี้ยประกัน/วันที่ครบกำหนดชำระ|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="loadDataFromFile">false</boolProp>
                  <stringProp name="dataFile"></stringProp>
                </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert4_2&quot;, &quot;&quot;)
vars.putObject(&quot;assert4_2_is_has_policy&quot;, &quot;false&quot;)
</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                  <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF4_2} &lt; 4),)}</stringProp>
                </WhileController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F4_2_view_premiumpayment_detail-1" enabled="true">
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <stringProp name="dataType">Text</stringProp>
                    <boolProp name="createNewConnection">false</boolProp>
                    <stringProp name="readTimeout">${timeout}</stringProp>
                    <boolProp name="optional">false</boolProp>
                  </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF4_2&quot;)
String expected = &quot;กรุณาเลือกกรมธรรม์ ที่คุณต้องการสอบถามข้อมูลได้เลยค่ะ&quot;
String expected2 = &quot;${Policy Number}&quot;
String expected3 = &quot;คุณต้องการเพิ่มกรมธรรม์เพื่อรับบริการตอนนี้หรือไม่คะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;verify4_2_1&quot;)
String varify2 = vars.getObject(&quot;verify4_2_2&quot;)
String varify3 = vars.getObject(&quot;verify4_2_3&quot;)

int counter = (vars.getObject(&quot;counterF4_2&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;,response1)
log.info(&quot;respond&quot;+counter+&quot;:&quot;+response1);
if (response1.contains(expected)){
		vars.putObject(&quot;verify4_2_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;verify4_2_1&quot;)
		
} ;
if (response1.contains(expected2)){
		vars.putObject(&quot;verify4_2_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;verify4_2_2&quot;)
	
};
if (response1.contains(expected3)){
		vars.putObject(&quot;verify4_2_3&quot;, &quot;true&quot;)	
		varify3 = vars.getObject(&quot;verify4_2_3&quot;)
	
};

if(varify3.equals(&quot;true&quot;) &amp;&amp; counter == 4){
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_2&quot;, &quot;true&quot;)
	vars.putObject(&quot;assert4_2_is_has_policy&quot;, &quot;false&quot;)
} else if (counter &gt;= 2 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_2&quot;, &quot;true&quot;)
vars.putObject(&quot;assert4_2_is_has_policy&quot;, &quot;true&quot;)
} else if (counter == 4 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert4_2&quot;, &quot;false&quot;)
};


</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                    <stringProp name="CounterConfig.start">1</stringProp>
                    <stringProp name="CounterConfig.end"></stringProp>
                    <stringProp name="CounterConfig.incr">1</stringProp>
                    <stringProp name="CounterConfig.name">counterF4_2</stringProp>
                    <stringProp name="CounterConfig.format"></stringProp>
                    <boolProp name="CounterConfig.per_user">true</boolProp>
                    <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                  </CounterConfig>
                  <hashTree/>
                </hashTree>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String assertion = vars.getObject(&quot;assert4_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="has_policy" enabled="true">
                <stringProp name="IfController.condition">${__jexl3(&quot;${assert4_2_is_has_policy}&quot; == &quot;true&quot;,)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F4_2_1_view_premiumpayment_detail_select" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F4_2_1_view_premiumpayment_detail_select-0" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_dd4d9b9f.2a5de8|btn|${Policy Number}|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                    <stringProp name="readTimeout">6000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert4_2_1&quot;, &quot;&quot;)
log.info(&quot;counterF4_2_1 : &quot;+counterF4_2_1)
</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                    <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF4_2_1} &lt; 3),)}</stringProp>
                  </WhileController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F4_2_1_view_premiumpayment_detail_select-1" enabled="true">
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server"></stringProp>
                      <stringProp name="port">80</stringProp>
                      <stringProp name="path"></stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <stringProp name="dataType">Text</stringProp>
                      <boolProp name="createNewConnection">false</boolProp>
                      <stringProp name="readTimeout">6000</stringProp>
                      <boolProp name="optional">false</boolProp>
                    </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                    <hashTree>
                      <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF4_2_1&quot;)
String expected = &quot;กรมธรรม์เลขที่ ${Policy Number}&quot;
String expected2 = &quot;หากคุณต้องการทำรายการอื่นๆ หรือจบบทสนทนา&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;verify4_2_1&quot;)
String varify2 = vars.getObject(&quot;verify4_2_2&quot;)
int counter = (vars.getObject(&quot;counterF4_2_1&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;,response1)
log.info(&quot;respond&quot;+counter+&quot;:&quot;+response1);
if (response1.contains(expected)){
		vars.putObject(&quot;verify4_2_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;verify4_2_1&quot;)
		
} ;
if (response1.contains(expected2)){
		vars.putObject(&quot;verify4_2_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;verify4_2_2&quot;)
	
};
log.info(&quot;varify1 : &quot;+ varify1)
log.info(&quot;varify2 : &quot;+ varify2)
if (counter &gt;= 2 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_2_1&quot;, &quot;true&quot;)
} else if (counter == 4 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert4_2_1&quot;, &quot;false&quot;)
};


</stringProp>
                      </JSR223PostProcessor>
                      <hashTree/>
                    </hashTree>
                    <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                      <stringProp name="CounterConfig.start">1</stringProp>
                      <stringProp name="CounterConfig.end"></stringProp>
                      <stringProp name="CounterConfig.incr">1</stringProp>
                      <stringProp name="CounterConfig.name">counterF4_2_1</stringProp>
                      <stringProp name="CounterConfig.format"></stringProp>
                      <boolProp name="CounterConfig.per_user">true</boolProp>
                      <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                    </CounterConfig>
                    <hashTree/>
                  </hashTree>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String assertion = vars.getObject(&quot;assert4_2_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="not_has_policy" enabled="true">
                <stringProp name="IfController.condition">${__jexl3(&quot;${assert4_2_is_has_policy}&quot; == &quot;false&quot;,)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
                <boolProp name="IfController.useExpression">true</boolProp>
              </IfController>
              <hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F4_2_2_not_add_policy" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F4_2_2_not_add_policy-0" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_43fe3ab5.de06c4|ไม่​ต้อง​การ\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                    <stringProp name="readTimeout">6000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert4_2_2&quot;, &quot;&quot;)
</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                    <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF4_2_2} &lt; 4),)}</stringProp>
                  </WhileController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F4_2_2_not_add_policy-1" enabled="true">
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server"></stringProp>
                      <stringProp name="port">80</stringProp>
                      <stringProp name="path"></stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <stringProp name="dataType">Text</stringProp>
                      <boolProp name="createNewConnection">false</boolProp>
                      <stringProp name="readTimeout">6000</stringProp>
                      <boolProp name="optional">false</boolProp>
                    </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                    <hashTree>
                      <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF4_2_2&quot;)
String expected = &quot;คุณสามารถติดต่อศูนย์ลูกค้าสัมพันธ์ได้ที่ email&quot;
String timeout = &quot;SET_TIMEOUT&quot;
int counter = (vars.getObject(&quot;counterF4_2_2&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;,response1)

if (response1.contains(expected)){
		vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_2_2&quot;, &quot;true&quot;)
		
}else if (counter == 4 ) {
	vars.putObject(&quot;assert4_2_2&quot;, &quot;false&quot;)
};


</stringProp>
                      </JSR223PostProcessor>
                      <hashTree/>
                    </hashTree>
                    <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                      <stringProp name="CounterConfig.start">1</stringProp>
                      <stringProp name="CounterConfig.end"></stringProp>
                      <stringProp name="CounterConfig.incr">1</stringProp>
                      <stringProp name="CounterConfig.name">counterF4_2_2</stringProp>
                      <stringProp name="CounterConfig.format"></stringProp>
                      <boolProp name="CounterConfig.per_user">true</boolProp>
                      <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                    </CounterConfig>
                    <hashTree/>
                  </hashTree>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String assertion = vars.getObject(&quot;assert4_2_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
                <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F4_2_3_add_policy" enabled="true">
                  <boolProp name="TransactionController.includeTimers">false</boolProp>
                  <boolProp name="TransactionController.parent">false</boolProp>
                </TransactionController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F4_2_3_add_policy-0" enabled="true">
                    <boolProp name="createNewConnection">false</boolProp>
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <boolProp name="binaryPayload">false</boolProp>
                    <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_43fe3ab5.de06c4|ต้องการ\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                    <stringProp name="readTimeout">6000</stringProp>
                    <boolProp name="loadDataFromFile">false</boolProp>
                    <stringProp name="dataFile"></stringProp>
                  </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert4_2_3&quot;, &quot;&quot;)
</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                    <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF4_2_3} &lt; 4),)}</stringProp>
                  </WhileController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F4_2_3_add_policy-1" enabled="true">
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server"></stringProp>
                      <stringProp name="port">80</stringProp>
                      <stringProp name="path"></stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <stringProp name="dataType">Text</stringProp>
                      <boolProp name="createNewConnection">false</boolProp>
                      <stringProp name="readTimeout">6000</stringProp>
                      <boolProp name="optional">false</boolProp>
                    </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                    <hashTree>
                      <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF4_2_3&quot;)
String expected = &quot;ยินดีค่ะ&quot;
String timeout = &quot;SET_TIMEOUT&quot;
int counter = (vars.getObject(&quot;counterF4_2_3&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;,response1)

if (response1.contains(expected)){
		vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_2_3&quot;, &quot;true&quot;)
		
}else if (counter == 4) {
	vars.putObject(&quot;assert4_2_3&quot;, &quot;false&quot;)
};


</stringProp>
                      </JSR223PostProcessor>
                      <hashTree/>
                    </hashTree>
                    <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                      <stringProp name="CounterConfig.start">1</stringProp>
                      <stringProp name="CounterConfig.end"></stringProp>
                      <stringProp name="CounterConfig.incr">1</stringProp>
                      <stringProp name="CounterConfig.name">counterF4_2_3</stringProp>
                      <stringProp name="CounterConfig.format"></stringProp>
                      <boolProp name="CounterConfig.per_user">true</boolProp>
                      <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                    </CounterConfig>
                    <hashTree/>
                  </hashTree>
                  <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String assertion = vars.getObject(&quot;assert4_2_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                  </JSR223Assertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F4_3_select_howto_reinstatement" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F4_3_select_howto_reinstatement-0" enabled="true">
                <boolProp name="createNewConnection">false</boolProp>
                <boolProp name="TLS">false</boolProp>
                <stringProp name="server"></stringProp>
                <stringProp name="port">80</stringProp>
                <stringProp name="path"></stringProp>
                <stringProp name="connectTimeout">20000</stringProp>
                <boolProp name="binaryPayload">false</boolProp>
                <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_5822adb2.104254|btn|ขอทราบยอดต่ออายุกรมธรรม์|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                <stringProp name="readTimeout">${timeout}</stringProp>
                <boolProp name="loadDataFromFile">false</boolProp>
                <stringProp name="dataFile"></stringProp>
              </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert4_1&quot;, &quot;&quot;)
</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF4_1} &lt; 3),)}</stringProp>
              </WhileController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F4_3_select_howto_reinstatement-1" enabled="true">
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <stringProp name="dataType">Text</stringProp>
                  <boolProp name="createNewConnection">false</boolProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="optional">false</boolProp>
                </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF4_1&quot;)
String expected = &quot;รายละเอียดการต่ออายุกรมธรรม์ มีทั้งหมด 4 หัวข้อ ดังนี้ค่ะ&quot;
String expected2 = &quot;ขอทราบยอดต่ออายุกรมธรรม์&quot;
String timeout = &quot;SET_TIMEOUT&quot;
String varify1 = vars.getObject(&quot;assert4_1_1&quot;)
String varify2 = vars.getObject(&quot;assert4_1_2&quot;)
int counter = (vars.getObject(&quot;counterF4_1&quot;)).toInteger();
vars.putObject(&quot;responseCheck&quot;,response1)
log.info(&quot;respond&quot;+counter+&quot;:&quot;+response1);
if (response1.contains(expected)){
		vars.putObject(&quot;assert4_1_1&quot;, &quot;true&quot;)
		varify1 = vars.getObject(&quot;assert4_1_1&quot;)
		
} ;
if (response1.contains(expected2)){
		vars.putObject(&quot;assert4_1_2&quot;, &quot;true&quot;)	
		varify2 = vars.getObject(&quot;assert4_1_2&quot;)
	
};

if (counter &gt;= 2 &amp;&amp; varify1.equals(&quot;true&quot;) &amp;&amp; varify2.equals(&quot;true&quot;)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_1&quot;, &quot;true&quot;)
} else if (counter == 4 &amp;&amp; !varify1.equals(&quot;true&quot;) &amp;&amp; !varify2.equals(&quot;true&quot;) ) {
	vars.putObject(&quot;assert4_1&quot;, &quot;false&quot;)
};


</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                  <stringProp name="CounterConfig.start">1</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">counterF4_1</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">true</boolProp>
                  <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                </CounterConfig>
                <hashTree/>
              </hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">String assertion = vars.getObject(&quot;assert4_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)
def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="F4_4_select_ask_for_reinstatement" enabled="true"/>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F4_4_select_ask_for_reinstatement" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F4_4_select_ask_for_reinstatement-0" enabled="true">
                  <boolProp name="createNewConnection">false</boolProp>
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <boolProp name="binaryPayload">false</boolProp>
                  <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_5822adb2.104254|btn|ขอทราบยอดต่ออายุกรมธรรม์|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="loadDataFromFile">false</boolProp>
                  <stringProp name="dataFile"></stringProp>
                </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert4_4&quot;, &quot;&quot;)</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                  <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF4_4} &lt; 5),)}</stringProp>
                </WhileController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F4_4_select_ask_for_reinstatement-1" enabled="true">
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <stringProp name="dataType">Text</stringProp>
                    <boolProp name="createNewConnection">false</boolProp>
                    <stringProp name="readTimeout">${timeout}</stringProp>
                    <boolProp name="optional">false</boolProp>
                  </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF4_4&quot;)
String expected = &quot;ข้อมูลในส่วนนี้ Emma ขอให้เจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์เป็นผู้ดูแลผ่านทาง Live Chat นะคะ คุณต้องการติดต่อเจ้าหน้าที่หรือไม่คะ?&quot;

vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_4&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_4&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert4_4&quot;, &quot;false&quot;)

}</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                    <stringProp name="CounterConfig.start">1</stringProp>
                    <stringProp name="CounterConfig.end"></stringProp>
                    <stringProp name="CounterConfig.incr">1</stringProp>
                    <stringProp name="CounterConfig.name">counterF4_4</stringProp>
                    <stringProp name="CounterConfig.format"></stringProp>
                    <boolProp name="CounterConfig.per_user">true</boolProp>
                    <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                  </CounterConfig>
                  <hashTree/>
                </hashTree>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String assertion = vars.getObject(&quot;assert4_4&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}
</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F4_5_select_ask_for_reinstatement_need_chat" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F4_5_select_ask_for_reinstatement_need_chat-0" enabled="true">
                  <boolProp name="createNewConnection">false</boolProp>
                  <boolProp name="TLS">false</boolProp>
                  <stringProp name="server"></stringProp>
                  <stringProp name="port">80</stringProp>
                  <stringProp name="path"></stringProp>
                  <stringProp name="connectTimeout">20000</stringProp>
                  <boolProp name="binaryPayload">false</boolProp>
                  <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_507a4a0e.a68a54|ต้องการ\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                  <stringProp name="readTimeout">${timeout}</stringProp>
                  <boolProp name="loadDataFromFile">false</boolProp>
                  <stringProp name="dataFile"></stringProp>
                </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                <hashTree>
                  <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                    <stringProp name="scriptLanguage">groovy</stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="filename"></stringProp>
                    <stringProp name="cacheKey">true</stringProp>
                    <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert4_5&quot;, &quot;&quot;)
vars.putObject(&quot;assert4_5_is_have_policy&quot;, &quot;false&quot;)</stringProp>
                  </JSR223PostProcessor>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                  <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF4_5} &lt; 5),)}</stringProp>
                </WhileController>
                <hashTree>
                  <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F4_5_select_ask_for_reinstatement_need_chat-1" enabled="true">
                    <boolProp name="TLS">false</boolProp>
                    <stringProp name="server"></stringProp>
                    <stringProp name="port">80</stringProp>
                    <stringProp name="path"></stringProp>
                    <stringProp name="connectTimeout">20000</stringProp>
                    <stringProp name="dataType">Text</stringProp>
                    <boolProp name="createNewConnection">false</boolProp>
                    <stringProp name="readTimeout">${timeout}</stringProp>
                    <boolProp name="optional">false</boolProp>
                  </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                  <hashTree>
                    <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF4_5&quot;)
String expected = &quot;ขออภัยค่ะ Emma ไม่พบกรมธรรม์ที่สามารถต่ออายุกรมธรรม์ได้ค่ะ&quot;
String expected2 = &quot;กรุณาเลือกกรมธรรม์ที่คุณต้องการสอบถามข้อมูลได้เลยค่ะ&quot;

vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_5&quot;, &quot;true&quot;)
} else if (response1.contains(expected2)) {
	vars.putObject(&quot;assert4_5_is_have_policy&quot;, &quot;true&quot;)
	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_5&quot;, &quot;true&quot;)
} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_5&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert4_5&quot;, &quot;false&quot;)

}</stringProp>
                    </JSR223PostProcessor>
                    <hashTree/>
                  </hashTree>
                  <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                    <stringProp name="CounterConfig.start">1</stringProp>
                    <stringProp name="CounterConfig.end"></stringProp>
                    <stringProp name="CounterConfig.incr">1</stringProp>
                    <stringProp name="CounterConfig.name">counterF4_5</stringProp>
                    <stringProp name="CounterConfig.format"></stringProp>
                    <boolProp name="CounterConfig.per_user">true</boolProp>
                    <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                  </CounterConfig>
                  <hashTree/>
                </hashTree>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String assertion = vars.getObject(&quot;assert4_5&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}</stringProp>
                </JSR223Assertion>
                <hashTree/>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If has policy" enabled="true">
                  <stringProp name="IfController.condition">${__jexl3(&quot;${assert4_5_is_have_policy}&quot; == &quot;true&quot;,)}</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                  <boolProp name="IfController.useExpression">true</boolProp>
                </IfController>
                <hashTree>
                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F4_5_1_select_policy" enabled="true">
                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                    <boolProp name="TransactionController.parent">false</boolProp>
                  </TransactionController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F4_5_1_select_policy-0" enabled="true">
                      <boolProp name="createNewConnection">false</boolProp>
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server"></stringProp>
                      <stringProp name="port">80</stringProp>
                      <stringProp name="path"></stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <boolProp name="binaryPayload">false</boolProp>
                      <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_8b93fe83.789bb|btn|502-3159790|เลือก\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                      <stringProp name="readTimeout">${timeout}</stringProp>
                      <boolProp name="loadDataFromFile">false</boolProp>
                      <stringProp name="dataFile"></stringProp>
                    </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                    <hashTree>
                      <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert4_5_1&quot;, &quot;&quot;)</stringProp>
                      </JSR223PostProcessor>
                      <hashTree/>
                    </hashTree>
                    <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                      <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF4_5_1} &lt; 5),)}</stringProp>
                    </WhileController>
                    <hashTree>
                      <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F4_5_1_select_policy-1" enabled="true">
                        <boolProp name="TLS">false</boolProp>
                        <stringProp name="server"></stringProp>
                        <stringProp name="port">80</stringProp>
                        <stringProp name="path"></stringProp>
                        <stringProp name="connectTimeout">20000</stringProp>
                        <stringProp name="dataType">Text</stringProp>
                        <boolProp name="createNewConnection">false</boolProp>
                        <stringProp name="readTimeout">${timeout}</stringProp>
                        <boolProp name="optional">false</boolProp>
                      </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                      <hashTree>
                        <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF4_5_1&quot;)
String expected = &quot;กรุณาระบุวันที่ต้องการชำระเบี้ยต่ออายุกรมธรรม์ค่ะ เช่น วัน/เดือน/ปี&quot;

vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_5_1&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_5_1&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert4_5_1&quot;, &quot;false&quot;)

}</stringProp>
                        </JSR223PostProcessor>
                        <hashTree/>
                      </hashTree>
                      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                        <stringProp name="CounterConfig.start">1</stringProp>
                        <stringProp name="CounterConfig.end"></stringProp>
                        <stringProp name="CounterConfig.incr">1</stringProp>
                        <stringProp name="CounterConfig.name">counterF4_5_1</stringProp>
                        <stringProp name="CounterConfig.format"></stringProp>
                        <boolProp name="CounterConfig.per_user">true</boolProp>
                        <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                      </CounterConfig>
                      <hashTree/>
                    </hashTree>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">String assertion = vars.getObject(&quot;assert4_5_1&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F4_5_2_enter_date" enabled="true">
                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                    <boolProp name="TransactionController.parent">false</boolProp>
                  </TransactionController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F4_5_2_enter_date-0" enabled="true">
                      <boolProp name="createNewConnection">false</boolProp>
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server"></stringProp>
                      <stringProp name="port">80</stringProp>
                      <stringProp name="path"></stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <boolProp name="binaryPayload">false</boolProp>
                      <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;02/07/2564\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                      <stringProp name="readTimeout">${timeout}</stringProp>
                      <boolProp name="loadDataFromFile">false</boolProp>
                      <stringProp name="dataFile"></stringProp>
                    </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                    <hashTree>
                      <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert4_5_2&quot;, &quot;&quot;)</stringProp>
                      </JSR223PostProcessor>
                      <hashTree/>
                    </hashTree>
                    <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                      <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF4_5_2} &lt; 5),)}</stringProp>
                    </WhileController>
                    <hashTree>
                      <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F4_5_2_enter_date-1" enabled="true">
                        <boolProp name="TLS">false</boolProp>
                        <stringProp name="server"></stringProp>
                        <stringProp name="port">80</stringProp>
                        <stringProp name="path"></stringProp>
                        <stringProp name="connectTimeout">20000</stringProp>
                        <stringProp name="dataType">Text</stringProp>
                        <boolProp name="createNewConnection">false</boolProp>
                        <stringProp name="readTimeout">${timeout}</stringProp>
                        <boolProp name="optional">false</boolProp>
                      </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                      <hashTree>
                        <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF4_5_2&quot;)
String expected = &quot;กรุณารอสักครู่ Emma จะประสานงานให้เจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ดูแลนะคะ&quot;

vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_5_2&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_5_2&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert4_5_2&quot;, &quot;false&quot;)

}</stringProp>
                        </JSR223PostProcessor>
                        <hashTree/>
                      </hashTree>
                      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                        <stringProp name="CounterConfig.start">1</stringProp>
                        <stringProp name="CounterConfig.end"></stringProp>
                        <stringProp name="CounterConfig.incr">1</stringProp>
                        <stringProp name="CounterConfig.name">counterF4_5_2</stringProp>
                        <stringProp name="CounterConfig.format"></stringProp>
                        <boolProp name="CounterConfig.per_user">true</boolProp>
                        <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                      </CounterConfig>
                      <hashTree/>
                    </hashTree>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">String assertion = vars.getObject(&quot;assert4_5_2&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F4_5_3_contract_by_phone_number" enabled="true">
                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                    <boolProp name="TransactionController.parent">false</boolProp>
                  </TransactionController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F4_5_3_contract_by_phone_number-0" enabled="true">
                      <boolProp name="createNewConnection">false</boolProp>
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server"></stringProp>
                      <stringProp name="port">80</stringProp>
                      <stringProp name="path"></stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <boolProp name="binaryPayload">false</boolProp>
                      <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_bcc87e6c.9e1f8|โทรศัพท์มือถือ\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                      <stringProp name="readTimeout">${timeout}</stringProp>
                      <boolProp name="loadDataFromFile">false</boolProp>
                      <stringProp name="dataFile"></stringProp>
                    </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                    <hashTree>
                      <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert4_5_3&quot;, &quot;&quot;)</stringProp>
                      </JSR223PostProcessor>
                      <hashTree/>
                    </hashTree>
                    <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                      <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF4_5_3} &lt; 5),)}</stringProp>
                    </WhileController>
                    <hashTree>
                      <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F4_5_3_contract_by_phone_number-1" enabled="true">
                        <boolProp name="TLS">false</boolProp>
                        <stringProp name="server"></stringProp>
                        <stringProp name="port">80</stringProp>
                        <stringProp name="path"></stringProp>
                        <stringProp name="connectTimeout">20000</stringProp>
                        <stringProp name="dataType">Text</stringProp>
                        <boolProp name="createNewConnection">false</boolProp>
                        <stringProp name="readTimeout">${timeout}</stringProp>
                        <boolProp name="optional">false</boolProp>
                      </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                      <hashTree>
                        <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF4_5_3&quot;)
String expected = &quot;คุณต้องการให้เจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ติดต่อกลับที่เบอร์โทรศัพท์&quot;

vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_5_3&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_5_3&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert4_5_3&quot;, &quot;false&quot;)

}</stringProp>
                        </JSR223PostProcessor>
                        <hashTree/>
                      </hashTree>
                      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                        <stringProp name="CounterConfig.start">1</stringProp>
                        <stringProp name="CounterConfig.end"></stringProp>
                        <stringProp name="CounterConfig.incr">1</stringProp>
                        <stringProp name="CounterConfig.name">counterF4_5_3</stringProp>
                        <stringProp name="CounterConfig.format"></stringProp>
                        <boolProp name="CounterConfig.per_user">true</boolProp>
                        <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                      </CounterConfig>
                      <hashTree/>
                    </hashTree>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">String assertion = vars.getObject(&quot;assert4_5_3&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                  <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="F4_5_4_contract_by_phone_number_confirm" enabled="true">
                    <boolProp name="TransactionController.includeTimers">false</boolProp>
                    <boolProp name="TransactionController.parent">false</boolProp>
                  </TransactionController>
                  <hashTree>
                    <eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler" testname="F4_5_4_contract_by_phone_number_confirm-0" enabled="true">
                      <boolProp name="createNewConnection">false</boolProp>
                      <boolProp name="TLS">false</boolProp>
                      <stringProp name="server"></stringProp>
                      <stringProp name="port">80</stringProp>
                      <stringProp name="path"></stringProp>
                      <stringProp name="connectTimeout">20000</stringProp>
                      <boolProp name="binaryPayload">false</boolProp>
                      <stringProp name="requestData">42/ws,[&quot;message&quot;,&quot;{\&quot;text\&quot;:\&quot;__NN_191c0af7.720675|ยืนยัน\&quot;,\&quot;token\&quot;:\&quot;${token}\&quot;}&quot;]</stringProp>
                      <stringProp name="readTimeout">${timeout}</stringProp>
                      <boolProp name="loadDataFromFile">false</boolProp>
                      <stringProp name="dataFile"></stringProp>
                    </eu.luminis.jmeter.wssampler.RequestResponseWebSocketSampler>
                    <hashTree>
                      <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                        <stringProp name="scriptLanguage">groovy</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">vars.putObject(&quot;loop&quot;, &quot;yes&quot;)
vars.putObject(&quot;assert4_5_4&quot;, &quot;&quot;)</stringProp>
                      </JSR223PostProcessor>
                      <hashTree/>
                    </hashTree>
                    <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                      <stringProp name="WhileController.condition">${__jexl3((&quot;${loop}&quot;==&quot;yes&quot; &amp;&amp; ${counterF4_5_4} &lt; 5),)}</stringProp>
                    </WhileController>
                    <hashTree>
                      <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="F4_5_4_contract_by_phone_number_confirm-1" enabled="true">
                        <boolProp name="TLS">false</boolProp>
                        <stringProp name="server"></stringProp>
                        <stringProp name="port">80</stringProp>
                        <stringProp name="path"></stringProp>
                        <stringProp name="connectTimeout">20000</stringProp>
                        <stringProp name="dataType">Text</stringProp>
                        <boolProp name="createNewConnection">false</boolProp>
                        <stringProp name="readTimeout">${timeout}</stringProp>
                        <boolProp name="optional">false</boolProp>
                      </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
                      <hashTree>
                        <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                          <stringProp name="scriptLanguage">groovy</stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="filename"></stringProp>
                          <stringProp name="cacheKey">true</stringProp>
                          <stringProp name="script">String response1 = prev.getResponseDataAsString();
String count = vars.getObject(&quot;counterF4_5_4&quot;)
String expected = &quot;ยินดีค่ะ Emma จะประสานงานกับเจ้าหน้าที่ศูนย์ลูกค้าสัมพันธ์ให้ติดต่อไปยังโทรศัพท์มือถือที่คุณแจ้งไว้โดยเร็วที่สุดนะคะ&quot;

vars.putObject(&quot;responseCheck&quot;, response1)


if (response1.contains(expected)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_5_4&quot;, &quot;true&quot;)

} else if (count.equals(&quot;3&quot;) &amp;&amp; !response1.contains(timeout)) {

	vars.putObject(&quot;loop&quot;, &quot;no&quot;)
	vars.putObject(&quot;assert4_5_4&quot;, &quot;false&quot;)

} else if (count.equals(&quot;4&quot;)) {
	vars.putObject(&quot;assert4_5_4&quot;, &quot;false&quot;)

}</stringProp>
                        </JSR223PostProcessor>
                        <hashTree/>
                      </hashTree>
                      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                        <stringProp name="CounterConfig.start">1</stringProp>
                        <stringProp name="CounterConfig.end"></stringProp>
                        <stringProp name="CounterConfig.incr">1</stringProp>
                        <stringProp name="CounterConfig.name">counterF4_5_4</stringProp>
                        <stringProp name="CounterConfig.format"></stringProp>
                        <boolProp name="CounterConfig.per_user">true</boolProp>
                        <boolProp name="CounterConfig.reset_on_tg_iteration">true</boolProp>
                      </CounterConfig>
                      <hashTree/>
                    </hashTree>
                    <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="JSR223 Assertion" enabled="true">
                      <stringProp name="scriptLanguage">groovy</stringProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="cacheKey">true</stringProp>
                      <stringProp name="script">String assertion = vars.getObject(&quot;assert4_5_4&quot;)
String message = vars.getObject(&quot;responseCheck&quot;)

def failureMessage = &quot;&quot;;

if(assertion.equals(&quot;false&quot;)) {
	failureMessage += &quot;Return:&quot; + message; 
	AssertionResult.setFailureMessage(failureMessage);
	AssertionResult.setFailure(true); 
}</stringProp>
                    </JSR223Assertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="host_name" elementType="Argument">
              <stringProp name="Argument.name">host_name</stringProp>
              <stringProp name="Argument.value">emma-dev.convolab.ai</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="type" elementType="Argument">
              <stringProp name="Argument.name">type</stringProp>
              <stringProp name="Argument.value">channels-emmadev</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="no_policy" elementType="Argument">
              <stringProp name="Argument.name">no_policy</stringProp>
              <stringProp name="Argument.value">ขออภัยค่ะ Emma ไม่พบกรมธรรม์ที่เชื่อมต่อไว้</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="address" elementType="Argument">
              <stringProp name="Argument.name">address</stringProp>
              <stringProp name="Argument.value">${__RandomString(10,abcdefghijklmnopqrstuvwxyz0123456789)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="phone_number" elementType="Argument">
              <stringProp name="Argument.name">phone_number</stringProp>
              <stringProp name="Argument.value">081${__RandomString(7,1234567890,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="email" elementType="Argument">
              <stringProp name="Argument.name">email</stringProp>
              <stringProp name="Argument.value">${__RandomString(8,abcdefghijklmnopqrstuvwxyz0123456789)}@gmail.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="policy_added" elementType="Argument">
              <stringProp name="Argument.name">policy_added</stringProp>
              <stringProp name="Argument.value">คุณต้องการเปลี่ยนข้อมูลทุกกรมธรรม์หรือไม่คะ</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="timeout" elementType="Argument">
              <stringProp name="Argument.name">timeout</stringProp>
              <stringProp name="Argument.value">25000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
